(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{394:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#model"}},[t._v("#")]),t._v(" Model")]),t._v(" "),a("p",[a("strong",[t._v("model是由schema生成的模型，可以对数据库的操作")])]),t._v(" "),a("p",[t._v("由Schema发布生成的模型，具有抽象属性。可以对数据库的操作。"),a("strong",[t._v("model第一个参数如果不带s，影射到数据库里的collection名称会带上s")])]),t._v(" "),a("h2",{attrs:{id:"常用数据库操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用数据库操作"}},[t._v("#")]),t._v(" 常用数据库操作")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设定规则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userSchema"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("mongoose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Schema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       required"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//必填项")]),t._v("\n       minlength"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最小长度")]),t._v("\n       maxlength"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最大长度")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("String，\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Number\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建集合")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongoose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("model")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"User"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("userSchema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h3",{attrs:{id:"新增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新增"}},[t._v("#")]),t._v(" 新增")]),t._v(" "),a("h4",{attrs:{id:"save"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#save"}},[t._v("#")]),t._v(" save()")]),t._v(" "),a("p",[t._v("是模型的实例方法。有更新和插入两种功能。")]),t._v(" "),a("blockquote",[a("p",[t._v("[save("),a("a",{attrs:{href:"#model_Model-save"}},[t._v("options], [options.safe], [options.validateBeforeSave], [fn])")]),t._v("有更新和插入两种功能，到底是插入还是更新文档取决于save的参数。决定是插入一个文档还是更新，取决于_id参数。如果能根据_id找到一个已经存在的文档，那么就更新。如果没有传入_id参数或者找不到存在的文档，那么就插入一个新文档。带_id参数，但是找不到一个已经存在的文档，还是插入一个新文档，但是_id不会自动生成。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   name："),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"le"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2131132"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//保存")]),t._v("\nuser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h4",{attrs:{id:"create"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[t._v("#")]),t._v(" create()")]),t._v(" "),a("p",[t._v("是直接从模型中调用的作为方法调用，本质上是静态的，并将对象作为第一个参数。")]),t._v(" "),a("blockquote",[a("p",[t._v("[Model.create(doc(s), "),a("a",{attrs:{href:"#model_Model.create"}},[t._v("callback])")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"le"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2131132"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"insertmany"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insertmany"}},[t._v("#")]),t._v(" insertMany()")]),t._v(" "),a("p",[t._v("插入多条")]),t._v(" "),a("blockquote",[a("p",[t._v("[Model.insertMany(doc(s), "),a("a",{attrs:{href:"#model_Model.insertMany"}},[t._v("options], [callback])")]),t._v("多条数据插入，将多条数据一次性插入，相对于循环使用create保存会更加快。")])]),t._v(" "),a("h4",{attrs:{id:"save和create的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#save和create的区别"}},[t._v("#")]),t._v(" save和create的区别：")]),t._v(" "),a("blockquote",[a("p",[t._v("save数据被插入时被赋予了一个主键值，之后的操作由于主键相同就被方法判定为更新操作，导致每次只能新增一条数据。(只针对当前实例)")]),t._v(" "),a("p",[t._v("create每一次执行都生成一个实例对象，每一个对象都会得到一个不同的主键，所有可以插入多条相同数据（保存一组文档）")])]),t._v(" "),a("h3",{attrs:{id:"删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除一个，只删除满足条件的第一个列表项")]),t._v("\nUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findOneAndDelete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里为查询条件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回的是删除的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除多个")]),t._v("\nUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteMany")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里为查询条件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回的是删除的数据")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h4",{attrs:{id:"findoneanddelete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findoneanddelete"}},[t._v("#")]),t._v(" findOneAndDelete()")]),t._v(" "),a("p",[t._v("查找匹配的一个文档，将其删除")]),t._v(" "),a("blockquote",[a("p",[t._v("findOneAndDelete(conditions,[update],[options],[options.lean],[callback])")]),t._v(" "),a("p",[t._v("options有以下选项：\n　　sort： 如果查询条件找到多个文档，则设置排序顺序以选择要删除哪个文档。\n　　select/projection：指定返回的字段。\n　　rawResult：如果为 true，则返回来自 MongoDB 的原生结果。")])]),t._v(" "),a("h4",{attrs:{id:"findoneandremove"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findoneandremove"}},[t._v("#")]),t._v(" findOneAndRemove()")]),t._v(" "),a("p",[t._v("查找匹配的一个文档，将其删除。用法与 "),a("code",[t._v("findOneAndDelete()")]),t._v(" 一样，一个小小的区别是 "),a("code",[t._v("findOneAndRemove()")]),t._v(" 会调用 MongoDB 原生的 "),a("code",[t._v("findAndModify()")]),t._v(" 命令，而不是 "),a("code",[t._v("findOneAndDelete()")]),t._v(" 命令。建议使用 "),a("code",[t._v("findOneAndDelete()")]),t._v(" 方法。")]),t._v(" "),a("blockquote",[a("p",[t._v("findOneAndDelete(conditions,[options],[callback])")])]),t._v(" "),a("h4",{attrs:{id:"remove"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remove"}},[t._v("#")]),t._v(" "),a("s",[t._v("remove()")])]),t._v(" "),a("p",[t._v("从集合中删除文档（已弃用）。从集合中删除所有匹配 "),a("code",[t._v("filter")]),t._v(" 条件的文档。")]),t._v(" "),a("blockquote",[a("p",[t._v("Model.remove(conditions, [callback])")])]),t._v(" "),a("h4",{attrs:{id:"findbyidandremove"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findbyidandremove"}},[t._v("#")]),t._v(" findByIdAndRemove()")]),t._v(" "),a("p",[t._v("查找匹配的文档，将其删除，并将找到的文档（如果有）传递给回调。")]),t._v(" "),a("blockquote",[a("p",[t._v("Model.findByIdAndRemove(id, [options], [callback])")]),t._v(" "),a("p",[t._v("options有以下选项：\n　　sort： 如果有多个查询条件，按顺序进行查询更新。\n　　select： 设置数据的返回。")])]),t._v(" "),a("h4",{attrs:{id:"deleteone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deleteone"}},[t._v("#")]),t._v(" deleteOne()")]),t._v(" "),a("p",[t._v("从集合中删除第一个符合条件的文档。其行为类似于remove（），但不管使用哪个选项，最多只删除一个文档。")]),t._v(" "),a("blockquote",[a("p",[t._v("Model.deleteOne(conditions,[options] ,[callback])")])]),t._v(" "),a("h4",{attrs:{id:"deletemany"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deletemany"}},[t._v("#")]),t._v(" deleteMany()")]),t._v(" "),a("p",[t._v("从集合中删除符合条件的所有文档，类似remove")]),t._v(" "),a("blockquote",[a("p",[t._v("Model.deleteMany(conditions,[options], [callback])")])]),t._v(" "),a("h3",{attrs:{id:"修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改"}},[t._v("#")]),t._v(" 修改")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新单个")]),t._v("\nUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*查询条件*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*要修改的值*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新多个")]),t._v("\nUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateMany")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*查询条件*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*要更改的值*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"updateone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updateone"}},[t._v("#")]),t._v(" updateOne()")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Model.updateOne(filter, update[, options][, callback])\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("与 "),a("code",[t._v("update()")]),t._v(" 相同，只是它不支持 "),a("code",[t._v("multi")]),t._v(" 和 "),a("code",[t._v("overwrite")]),t._v(" 选项参数，"),a("code",[t._v("update")]),t._v(" 参数必须使用 "),a("code",[t._v("update")]),t._v(" 操作符。")]),t._v(" "),a("p",[t._v("只更新第一条符合条件的文档的属性，如果要覆盖文档的全部内容，请使用 "),a("code",[t._v("replaceOne()")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"updatemany"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatemany"}},[t._v("#")]),t._v(" updateMany()")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Model.updateMany(filter, update[, options][, callback])\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("更新符合查询条件的所有文档，相当于 "),a("code",[t._v("Model.update(filter, update, { multi: true }[, callback])")])]),t._v(" "),a("h4",{attrs:{id:"findbyidandupdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findbyidandupdate"}},[t._v("#")]),t._v(" findByIdAndUpdate()")]),t._v(" "),a("p",[t._v("找到匹配的文档，根据update变量更新它，传递任何选项，并将找到的文档（如果有）返回到回调。如果回调被传递，则查询立即执行，否则返回一个Query对象。")]),t._v(" "),a("blockquote",[a("p",[t._v("Model.findByIdAndUpdate(id, [update], [options], [callback])")]),t._v(" "),a("p",[t._v("Options:")]),t._v(" "),a("p",[t._v("new : true 返回修改的文档而不是原始文档。默认为true")]),t._v(" "),a("p",[t._v("upsert：false 如果对象不存在，则创建对象。默认为false")]),t._v(" "),a("p",[t._v("runValidators： 如果值为true，执行Validation验证。\nsetDefaultsOnInsert： 如果upsert选项为true，在新建时插入文档定义的默认值。")]),t._v(" "),a("p",[t._v("Sort: 如果按照条件找到多个文档，请设置排序顺序以选择要更新的文档\nselect: 设置要返回的文档字段")])]),t._v(" "),a("h4",{attrs:{id:"findoneandupdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findoneandupdate"}},[t._v("#")]),t._v(" findOneAndUpdate()")]),t._v(" "),a("p",[t._v("默认返回原始的数据")]),t._v(" "),a("blockquote",[a("p",[t._v("Model.findOneAndUpdate(conditions, [update], [options], [callback])")]),t._v(" "),a("p",[t._v("options有以下选项：\n　　new： bool - 默认为false。返回修改后的数据。\n　　upsert： bool - 默认为false。如果不存在则创建记录。\n　　fields： {Object|String} - 选择字段。类似.select(fields).findOneAndUpdate()。\n　　maxTimeMS： 查询用时上限。\n　　sort： 如果有多个查询条件，按顺序进行查询更新。\n　　runValidators： 如果值为true，执行Validation验证。\n　　setDefaultsOnInsert： 如果upsert选项为true，在新建时插入文档定义的默认值。\n　　passRawResult： 如果为真，将原始结果作为回调函数第三个参数。")])]),t._v(" "),a("h4",{attrs:{id:"update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" "),a("s",[t._v("update()")])]),t._v(" "),a("p",[t._v("更新数据库中的文档而不返回它们。（已弃用）")]),t._v(" "),a("h4",{attrs:{id:"replaceone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replaceone"}},[t._v("#")]),t._v(" replaceOne()")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Model.replaceOne(filter, replace[, options][, callback])\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("配置与 "),a("code",[t._v("update()")]),t._v(" 相同，只是会用 "),a("code",[t._v("replace")]),t._v(" 参数中的数据覆盖符合条件的第一条文档，而不是更新属性，不支持任何 "),a("code",[t._v("update")]),t._v(" 操作符。")]),t._v(" "),a("h3",{attrs:{id:"查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[t._v("#")]),t._v(" 查询")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  根据条件查找文档（条件为空则查找所有文档）")]),t._v("\n User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  根据条件查找文档")]),t._v("\n User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node.js基础'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配大于 小于")]),t._v("\n User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$gt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $lt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配包含")]),t._v("\n User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'le'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//选择要查询的字段  ")]),t._v("\n User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将数据按照年龄进行排序")]),t._v("\n User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//skip 跳过多少条数据  limit 限制查询数量")]),t._v("\n User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("skip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("limit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h4",{attrs:{id:"find"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[t._v("#")]),t._v(" find()")]),t._v(" "),a("p",[t._v("查询所有符合条件的文档，总会返回一个数组。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Model.find(conditions,fields,[options],[callback])\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("blockquote",[a("p",[t._v("conditions查询条件")]),t._v(" "),a("p",[t._v("fields需要获取到的字段")]),t._v(" "),a("p",[t._v("options查询的选项（例如常用的skip和limit）")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("model.find({}, callback);\nmodel.find({},field,callback); 过滤查询,参数2: {‘name’:1, ‘age’:0} 查询文档的返回结果包含name , 不包含age.(_id默认是1)\n参数2field可以是对象也可以是字符串”name age”若是过滤_id,_id属性前面添加一个减号即可去除默认指定。”name age -_id”\nmodel.find({},null,{limit:20}); 过滤查询,参数3: 游标操作 limit限制返回结果数量为20个,如不足20个则返回所有.\n参数3查询选项如{\nSkip:3,//跳过前面3个\nLimit:2//显示文档个数\n}\n//查询非空字段\nModel.find(conditions:{$exists:true})\nModel.find(conditions:{$ne:null})\n//模糊查询\nuserModel.find({\"name\" : {$regex:'大虾'}})\nuserModel.find({\"name\" : /大虾/ }})\n//分页查询\nModel.find(conditions).skip(pageTotal * pageNum).limit(pageTotal).sort({'_id':-1}).exec(cb);\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h4",{attrs:{id:"findone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findone"}},[t._v("#")]),t._v(" findOne()")]),t._v(" "),a("p",[t._v("查询符合条件的第一个（首个）文档，总会返回一个具体的文档对象")]),t._v(" "),a("blockquote",[a("p",[t._v("model.findOne(conditions,field,[options],[callback])")])]),t._v(" "),a("h4",{attrs:{id:"findbyid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findbyid"}},[t._v("#")]),t._v(" findById()")]),t._v(" "),a("p",[t._v("根据文档的_id属性查询文档,返回对象")]),t._v(" "),a("blockquote",[a("p",[t._v("model.findById(conditions,field,[options],[callback])")])]),t._v(" "),a("h4",{attrs:{id:"distinct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#distinct"}},[t._v("#")]),t._v(" distinct")]),t._v(" "),a("p",[t._v("查询符合条件的文档并返回根据键分组的结果。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Model.distinct(field, conditions, callback);\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"where复杂查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#where复杂查询"}},[t._v("#")]),t._v(" where复杂查询")]),t._v(" "),a("p",[t._v("当查询比较复杂时，用 where")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Model\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//年龄大于25")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tags'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("in")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'movie'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'music'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'art'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//tags查询")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tags'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出name、age、tags三个字段")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("skip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("limit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slaveOk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h4",{attrs:{id:"联合查询populate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联合查询populate"}},[t._v("#")]),t._v(" 联合查询populate()")]),t._v(" "),a("p",[t._v("两个不同表中的数据有关联，要通过一个表中的数据找到另一个表的数据，需要使用populate方法")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户集合")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mongoose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("model")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("mongoose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Schema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文章集合")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Post "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mongoose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("model")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("mongoose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Schema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用ID将文章集合和作者集合进行关联")]),t._v("\n    author"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mongoose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ObjectId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//联合查询")]),t._v("\nPost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("populate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'author'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h4",{attrs:{id:"聚合aggregate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合aggregate"}},[t._v("#")]),t._v(" 聚合aggregate()")]),t._v(" "),a("p",[t._v("聚合管道可以对集合中的文档进行变换和组合。实际项目：多表关联查询、数据的统计")]),t._v(" "),a("p",[a("strong",[t._v("聚合管道")]),t._v("常用的几个操作")]),t._v(" "),a("ul",[a("li",[t._v("$project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。对应"),a("code",[t._v("project()")]),t._v("方法")]),t._v(" "),a("li",[t._v("$match：用于过滤数据，只输出符合条件的文档。使用 MongoDB 的标准查询操作。对应"),a("code",[t._v("match()")]),t._v("。")]),t._v(" "),a("li",[t._v("$limit：用来限制 MongoDB 聚合管道返回的文档数。对应"),a("code",[t._v("limit()")]),t._v("方法")]),t._v(" "),a("li",[t._v("$skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。对应"),a("code",[t._v("skip()")]),t._v("。")]),t._v(" "),a("li",[t._v("$unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。对应"),a("code",[t._v("unwind()")]),t._v("方法")]),t._v(" "),a("li",[t._v("$group：将集合中的文档分组，可用于统计结果。对应"),a("code",[t._v("group()")]),t._v("方法")]),t._v(" "),a("li",[t._v("$sort：将输入文档排序后输出。对应"),a("code",[t._v("sort()")]),t._v("方法")]),t._v(" "),a("li",[t._v("$lookup：多表关联。")]),t._v(" "),a("li",[t._v("$geoNear：输出接近某一地理位置的有序文档。对应"),a("code",[t._v("near()")]),t._v("。")])]),t._v(" "),a("h5",{attrs:{id:"group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group"}},[t._v("#")]),t._v(" $group")]),t._v(" "),a("p",[t._v("对集合中的文档进行分组，可用于统计结果。")]),t._v(" "),a("p",[t._v("$group 里面对应需要聚合操作的列必须写成 "),a("code",[t._v("_id")]),t._v(" , 否则会出现 "),a("code",[t._v("The field 'xxx' must be an accumulator object")]),t._v(" 的报错信息")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("$group")]),t._v("表达式说明：")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[a("code",[t._v("$sum")])]),t._v(" 计算总和")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("$avg")])]),t._v(" 计算平均值")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("$min")])]),t._v(" 获取每一组集合中所有文档对应值得最小值")]),t._v(" "),a("p",[a("strong",[t._v("$max")]),t._v(" 获取每一组集合中所有文档对应值得最大值")]),t._v(" "),a("p",[a("strong",[t._v("$push")]),t._v(" 在结果文档中插入值到一个数组中")]),t._v(" "),a("p",[a("strong",[t._v("$addToSet")]),t._v(" 在结果文档中插入值到一个数组中，但不创建副本")]),t._v(" "),a("p",[a("strong",[t._v("$first")]),t._v(" 根据资源文档的排序获取第一个文档数据")]),t._v(" "),a("p",[a("strong",[t._v("$last")]),t._v(" 根据资源文档的排序获取最后一个文档数据")])]),t._v(" "),a("p",[t._v("例如：按照订单号分组，统计每个订单的购买的商品总量")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.order_item.aggregate(\n[\n     {\n          $group: {_id: "$order_id", total: {$sum: "$number"}}\n     }\n])\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h5",{attrs:{id:"project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project"}},[t._v("#")]),t._v(" $project")]),t._v(" "),a("p",[t._v("筛选文档中指定的字段，例如返回username字段1返回0不返回._id如果不指定会默认返回")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.getCollection('users').aggregate([{\n    $project:{username:1}\n    }])\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h5",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" $match")]),t._v(" "),a("p",[t._v("筛选指定条件过滤满足条件的文档")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.getCollection('users').aggregate([{\n    $project:{username:1,_id:0}\n    },{\n        $match:{'username':{$in:['admin1']}}\n     }])\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h5",{attrs:{id:"sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[t._v("#")]),t._v(" $sort")]),t._v(" "),a("p",[t._v("对集合中的文档进行排序。1升序-1降序")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n        $sort:{'age':1}\n     }\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h5",{attrs:{id:"limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[t._v("#")]),t._v(" $limit")]),t._v(" "),a("p",[t._v("获取指定数量的文档")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n\t$limit:1\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h5",{attrs:{id:"skip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skip"}},[t._v("#")]),t._v(" $skip")]),t._v(" "),a("p",[t._v("跳过指定数量的文档")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n\t$skip:1\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h5",{attrs:{id:"lookup表关联"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lookup表关联"}},[t._v("#")]),t._v(" $lookup表关联")]),t._v(" "),a("p",[t._v("$lookup操作符用以引入其它集合的数据（用作多表关联查询）")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('db.order.aggregate([\n    {\n      $lookup:\n        {\n          from: "order_item",\n          localField: "order_id",\n          foreignField: "order_id",\n          as: "itemInfo"\n        }\n   }\n])\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h4",{attrs:{id:"获取文档数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取文档数"}},[t._v("#")]),t._v(" 获取文档数")]),t._v(" "),a("p",[t._v("返回符合条件的文档数。")]),t._v(" "),a("h5",{attrs:{id:"count"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#count"}},[t._v("#")]),t._v(" "),a("s",[t._v("count()")])]),t._v(" "),a("p",[t._v("统计与数据库集合中的"),a("code",[t._v("filter")]),t._v("所匹配的文档数。（已弃用）")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Model.count(conditions, callback);\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h5",{attrs:{id:"countdocuments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#countdocuments"}},[t._v("#")]),t._v(" countDocuments()")]),t._v(" "),a("p",[t._v("统计与数据库集合中的"),a("code",[t._v("conditions")]),t._v("所匹配的文档数。请注意，如果要统计大型集合中的所有文档，请使用estimatedDocumentCount()，如果使用"),a("code",[t._v("countDocuments()")]),t._v("函数MongoDB将始终执行完整的集合扫描而不使用任何索引。")]),t._v(" "),a("blockquote",[a("p",[t._v("countDocuments(conditions, [callback])")])]),t._v(" "),a("h5",{attrs:{id:"estimateddocumentcount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#estimateddocumentcount"}},[t._v("#")]),t._v(" estimatedDocumentCount()")]),t._v(" "),a("p",[t._v("统计与数据库集合中的conditions所匹配的文档数。")]),t._v(" "),a("blockquote",[a("p",[t._v("estimatedDocumentCount(conditions, [callback])")])]),t._v(" "),a("h4",{attrs:{id:"操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[t._v("#")]),t._v(" 操作符")]),t._v(" "),a("h5",{attrs:{id:"管道操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道操作符"}},[t._v("#")]),t._v(" 管道操作符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("操作符")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$group")]),t._v(" "),a("td",[t._v("将collection中的document分组，可用于统计结果")])]),t._v(" "),a("tr",[a("td",[t._v("$match")]),t._v(" "),a("td",[t._v("过滤数据，只输出符合结果的文档")])]),t._v(" "),a("tr",[a("td",[t._v("$project")]),t._v(" "),a("td",[t._v("修改输入文档的结构(例如重命名，增加、删除字段，创建结算结果等)")])]),t._v(" "),a("tr",[a("td",[t._v("$sort")]),t._v(" "),a("td",[t._v("将结果进行排序后输出")])]),t._v(" "),a("tr",[a("td",[t._v("$limit")]),t._v(" "),a("td",[t._v("限制管道输出的结果个数")])]),t._v(" "),a("tr",[a("td",[t._v("$skip")]),t._v(" "),a("td",[t._v("跳过制定数量的结果，并且返回剩下的结果")])]),t._v(" "),a("tr",[a("td",[t._v("$unwind")]),t._v(" "),a("td",[t._v("将数组类型的字段进行拆分")])])])]),t._v(" "),a("h5",{attrs:{id:"表达式操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式操作符"}},[t._v("#")]),t._v(" 表达式操作符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("操作符")]),t._v(" "),a("th",[t._v("含义")]),t._v(" "),a("th",[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$sum")]),t._v(" "),a("td",[t._v("计算总和，{"),a("code",[t._v("$sum")]),t._v(": 1}表示返回总和×1的值(即总和的数量),使用{"),a("code",[t._v("$sum")]),t._v(": "),a("code",[t._v("'$制定字段'")]),t._v("}也能直接获取制定字段的值的总和")]),t._v(" "),a("td",[t._v('db.collection.aggregate([{$group : {_id : "$by_user", content_sum : {$sum : "$likes"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$avg")]),t._v(" "),a("td",[t._v("平均值")]),t._v(" "),a("td",[t._v('db.collection.aggregate([{$group : {_id : "$by_user", content_sum : {$avg : "$likes"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$min")]),t._v(" "),a("td",[t._v("获取集合中所有文档对应值得最小值")]),t._v(" "),a("td",[t._v('db.collection.aggregate([{$group : {_id : "$by_user", content_sum : {$min : "$likes"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$max")]),t._v(" "),a("td",[t._v("获取集合中所有文档对应值得最大值")]),t._v(" "),a("td",[t._v('db.collection.aggregate([{$group : {_id : "$by_user", content_sum : {$max : "$likes"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$push")]),t._v(" "),a("td",[t._v("在结果文档中插入值到一个数组中")]),t._v(" "),a("td",[t._v('db.collection.aggregate([{$group : {_id : "$by_user", url : {$push : "$url"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$addToSet")]),t._v(" "),a("td",[t._v("在结果文档中插入值到一个数组中，但不创建副本")]),t._v(" "),a("td",[t._v('db.collection.aggregate([{$group : {_id : "$by_user", url : {$addToSet : "$url"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$first")]),t._v(" "),a("td",[t._v("根据资源文档的排序获取第一个文档数据")]),t._v(" "),a("td",[t._v('db.collection.aggregate([{$group : {_id : "$by_user", url : {$first : "$url"}}}])')])]),t._v(" "),a("tr",[a("td",[t._v("$last")]),t._v(" "),a("td",[t._v("根据资源文档的排序获取最后一个文档数据")]),t._v(" "),a("td",[t._v('db.collection.aggregate([{$group : {_id : "$by_user", url : {$last : "$url"}}}])')])])])]),t._v(" "),a("h5",{attrs:{id:"条件操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件操作符"}},[t._v("#")]),t._v(" 条件操作符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("操作符")]),t._v(" "),a("th",[t._v("含义")]),t._v(" "),a("th",[t._v("type")]),t._v(" "),a("th",[t._v("type")]),t._v(" "),a("th",[t._v("等价方法")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$or")]),t._v(" "),a("td",[t._v("或关系")]),t._v(" "),a("td",[t._v("数组")]),t._v(" "),a("td",[t._v("$name:{$or:['admin','test']}")]),t._v(" "),a("td",[t._v("or(['admin','test'])")])]),t._v(" "),a("tr",[a("td",[t._v("$nor")]),t._v(" "),a("td",[t._v("或关系取反")]),t._v(" "),a("td",[t._v("数组")]),t._v(" "),a("td",[t._v("$name:{$nor:['admin','test']}")]),t._v(" "),a("td",[t._v("nor(['admin','test'])")])]),t._v(" "),a("tr",[a("td",[t._v("$gt")]),t._v(" "),a("td",[t._v("大于")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("$age:{$gt:2}")]),t._v(" "),a("td",[t._v("gt('age', 2)")])]),t._v(" "),a("tr",[a("td",[t._v("$gte")]),t._v(" "),a("td",[t._v("大于等于")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("$age:{$gte:2}")]),t._v(" "),a("td",[t._v("gte('age', 21)")])]),t._v(" "),a("tr",[a("td",[t._v("$lt")]),t._v(" "),a("td",[t._v("小于")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("$age:{$lt:100}")]),t._v(" "),a("td",[t._v("lt('age',100)")])]),t._v(" "),a("tr",[a("td",[t._v("$lte")]),t._v(" "),a("td",[t._v("小于等于")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("$age:{$lte:10}")]),t._v(" "),a("td",[t._v("lte('age',10)")])]),t._v(" "),a("tr",[a("td",[t._v("$ne")]),t._v(" "),a("td",[t._v("不等于")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("$age:{$ne:10}")]),t._v(" "),a("td",[t._v("ne('age',10)")])]),t._v(" "),a("tr",[a("td",[t._v("$in")]),t._v(" "),a("td",[t._v("在多个值范围内")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("$age:{$in:100}")]),t._v(" "),a("td",[t._v("in('age',100)")])]),t._v(" "),a("tr",[a("td",[t._v("$nin")]),t._v(" "),a("td",[t._v("不在多个值范围内")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("$age:{$nin:100}")]),t._v(" "),a("td",[t._v("nin('age',100)")])]),t._v(" "),a("tr",[a("td",[t._v("$all")]),t._v(" "),a("td",[t._v("匹配数组中多个值")]),t._v(" "),a("td",[t._v("数组")]),t._v(" "),a("td",[t._v("$pets:{$all:['dog', 'cat', 'ferret']}")]),t._v(" "),a("td",[t._v("all('pets', ['dog', 'cat', 'ferret'])")])]),t._v(" "),a("tr",[a("td",[t._v("$regex")]),t._v(" "),a("td",[t._v("正则，用于模糊查询")]),t._v(" "),a("td",[t._v("String|RegExp")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$size")]),t._v(" "),a("td",[t._v("匹配数组大小")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$maxDistance")]),t._v(" "),a("td",[t._v("范围查询，距离（基于LBS）")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$mod")]),t._v(" "),a("td",[t._v("取模运算")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("mod()")])]),t._v(" "),a("tr",[a("td",[t._v("$near")]),t._v(" "),a("td",[t._v("邻域查询，查询附近的位置（基于LBS）")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$exists")]),t._v(" "),a("td",[t._v("字段是否存在")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$elemMatch")]),t._v(" "),a("td",[t._v("匹配内数组内的元素")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$within")]),t._v(" "),a("td",[t._v("范围查询（基于LBS）")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$box")]),t._v(" "),a("td",[t._v("范围查询，矩形范围（基于LBS）")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$center")]),t._v(" "),a("td",[t._v("范围醒询，圆形范围（基于LBS）")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$centerSphere")]),t._v(" "),a("td",[t._v("范围查询，球形范围（基于LBS）")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("$slice")]),t._v(" "),a("td",[t._v("查询字段集合中的元素（比如从第几个之后，第N到第M个元素）")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h4",{attrs:{id:"快捷函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快捷函数"}},[t._v("#")]),t._v(" 快捷函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("em",[a("strong",[t._v("name")])])]),t._v(" "),a("th",[a("em",[a("strong",[t._v("effect")])])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("select")]),t._v(" "),a("td",[t._v("添加需要显示的字段,需要的字段在字段后加上:1,不需要的加上0;"),a("br"),t._v("query.select({ a: 1, b: 0 }); //显示a字段, 隐藏b字段"),a("br"),t._v("不能和distinct方法一起使用")])]),t._v(" "),a("tr",[a("td",[t._v("distinct")]),t._v(" "),a("td",[t._v("用来筛选不重复的值或者字段"),a("br"),t._v("distinct(field). //筛选指定不重复字段的数据")])]),t._v(" "),a("tr",[a("td",[t._v("$lt,$lte,$gt,$gte.")]),t._v(" "),a("td",[t._v("分别对应: <,<=,>,>=. 该字段是用在condition中的.如果,你想要链式调用,则需要使用"),a("br"),t._v("lt,lte,ge,gte."),a("br"),t._v("eg:"),a("br"),t._v(" model.find({num:{$gt:12}},cb)"),a("br"),t._v("model.where(‘num’).gt(12).exec(cb)")])]),t._v(" "),a("tr",[a("td",[t._v("$in")]),t._v(" "),a("td",[t._v("查询包含键值的文档,"),a("br"),t._v("model.find({name:{$in:[“jimmy”,“sam”]}}) //相当于匹配 jimmy或者sam")])]),t._v(" "),a("tr",[a("td",[t._v("$nin")]),t._v(" "),a("td",[t._v("返回不匹配查询条件文档,都是指定数组类型"),a("br"),t._v("model.find({name:{$nin:[“jimmy”,“sam”]}})")])]),t._v(" "),a("tr",[a("td",[t._v("$ne")]),t._v(" "),a("td",[t._v("表示不包含指定值"),a("br"),t._v("model.find({name:{$ne:“sam”}})")])]),t._v(" "),a("tr",[a("td",[t._v("$or")]),t._v(" "),a("td",[t._v("表示或查询"),a("br"),t._v("model.find({$or:[{ color: ‘red’ }, { status: ‘emergency’ }]})")])]),t._v(" "),a("tr",[a("td",[t._v("$exits")]),t._v(" "),a("td",[t._v("表示键值是否存在;"),a("br"),t._v("model.find({name:{$exits:true}})")])]),t._v(" "),a("tr",[a("td",[t._v("$all")]),t._v(" "),a("td",[t._v("通常用来匹配数组里面的键值,匹配多个值(同时具有)"),a("br"),t._v("$all:[“apple”,“banana”,“peach”]}")])]),t._v(" "),a("tr",[a("td",[t._v("$size")]),t._v(" "),a("td",[t._v("用来查询数组的长度值"),a("br"),t._v("model.find({name:{$size:3}}); 匹配name的数组长度为3")])]),t._v(" "),a("tr",[a("td",[t._v("$slice")]),t._v(" "),a("td",[t._v("用来获取数组字段的内容:"),a("br"),t._v("query.slice(‘comments’, 5)")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);