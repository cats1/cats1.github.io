(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{434:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),s("p",[t._v("Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。")]),t._v(" "),s("h2",{attrs:{id:"git-工作区、暂存区和版本库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-工作区、暂存区和版本库"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Git 工作区、暂存区和版本库")])]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("我们先来理解下 Git 工作区、暂存区和版本库概念：")]),t._v(" "),s("ul",[s("li",[t._v("**工作区：**就是你在电脑里能看到的目录。")]),t._v(" "),s("li",[t._v("**暂存区：**英文叫 stage 或 index。一般存放在  .git 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。")]),t._v(" "),s("li",[t._v("**版本库：**工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库。")])]),t._v(" "),s("h2",{attrs:{id:"git-创建仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-创建仓库"}},[t._v("#")]),t._v(" Git 创建仓库")]),t._v(" "),s("h3",{attrs:{id:"初始化仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库"}},[t._v("#")]),t._v(" 初始化仓库")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git init\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Git 使用 "),s("strong",[t._v("git init")]),t._v(" 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 "),s("strong",[t._v("git init")]),t._v(" 是使用 Git 的第一个命令。")]),t._v(" "),s("p",[t._v("在执行完成 "),s("strong",[t._v("git init")]),t._v(" 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变。")]),t._v(" "),s("h4",{attrs:{id:"使用我们指定目录作为git仓库。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用我们指定目录作为git仓库。"}},[t._v("#")]),t._v(" 使用我们指定目录作为Git仓库。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git init newrepo\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拷贝"}},[t._v("#")]),t._v(" 拷贝")]),t._v(" "),s("p",[t._v("我们使用 "),s("strong",[t._v("git clone")]),t._v(" 从现有 Git 仓库中拷贝项目（类似 "),s("strong",[t._v("svn checkout")]),t._v("）。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git clone <repo>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果我们需要克隆到指定的目录，可以使用以下命令格式：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git clone <repo> <directory>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("参数说明：")])]),t._v(" "),s("ul",[s("li",[t._v("**repo:**Git 仓库。")]),t._v(" "),s("li",[t._v("**directory:**本地目录。")])]),t._v(" "),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("git 的设置使用 git config 命令。")]),t._v(" "),s("p",[t._v("显示当前的 git 配置信息：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git config --list\ncredential.helper=osxkeychain\ncore.repositoryformatversion=0\ncore.filemode=true\ncore.bare=false\ncore.logallrefupdates=true\ncore.ignorecase=true\ncore.precomposeunicode=true\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("设置提交代码时的用户信息：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ git config --global user.name "runoob"\n$ git config --global user.email test@runoob.com\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"基本操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg",alt:"img"}})]),t._v(" "),s("p",[s("strong",[t._v("说明：")])]),t._v(" "),s("ul",[s("li",[t._v("workspace：工作区")]),t._v(" "),s("li",[t._v("staging area：暂存区/缓存区")]),t._v(" "),s("li",[t._v("local repository：或本地仓库")]),t._v(" "),s("li",[t._v("remote repository：远程仓库")])]),t._v(" "),s("p",[t._v("一个简单的操作步骤：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git init    \n$ git add .    \n$ git commit  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("git init - 初始化仓库。")]),t._v(" "),s("li",[t._v("git add .  -  添加文件到暂存区。")]),t._v(" "),s("li",[t._v("git commit  -  将暂存区内容添加到仓库中。")])]),t._v(" "),s("h3",{attrs:{id:"创建仓库命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建仓库命令"}},[t._v("#")]),t._v(" 创建仓库命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("git init")])]),t._v(" "),s("td",[t._v("初始化仓库")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git clone")])]),t._v(" "),s("td",[t._v("拷贝一份远程仓库，也就是下载一个项目。")])])])]),t._v(" "),s("h3",{attrs:{id:"提交与修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交与修改"}},[t._v("#")]),t._v(" 提交与修改")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("git add")])]),t._v(" "),s("td",[t._v("添加文件到仓库")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git status")])]),t._v(" "),s("td",[t._v("查看仓库当前的状态，显示有变更的文件。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git diff")])]),t._v(" "),s("td",[t._v("比较文件的不同，即暂存区和工作区的差异。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git commit")])]),t._v(" "),s("td",[t._v("提交暂存区到本地仓库。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git reset")])]),t._v(" "),s("td",[t._v("回退版本。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git rm")])]),t._v(" "),s("td",[t._v("删除工作区文件。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git mv")])]),t._v(" "),s("td",[t._v("移动或重命名工作区文件。")])])])]),t._v(" "),s("h4",{attrs:{id:"git-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),s("h3",{attrs:{id:"提交日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交日志"}},[t._v("#")]),t._v(" 提交日志")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("git log")])]),t._v(" "),s("td",[t._v("查看历史提交记录")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git blame <file>")])]),t._v(" "),s("td",[t._v("以列表形式查看指定文件的历史修改记录")])])])]),t._v(" "),s("h3",{attrs:{id:"远程操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程操作"}},[t._v("#")]),t._v(" 远程操作")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("git remote")])]),t._v(" "),s("td",[t._v("远程仓库操作")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git fetch")])]),t._v(" "),s("td",[t._v("从远程获取代码库")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git pull")])]),t._v(" "),s("td",[t._v("下载远程代码并合并")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("git push")])]),t._v(" "),s("td",[t._v("上传远程代码并合并")])])])]),t._v(" "),s("h2",{attrs:{id:"git-分支管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-分支管理"}},[t._v("#")]),t._v(" Git 分支管理")]),t._v(" "),s("h3",{attrs:{id:"创建分支命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支命令"}},[t._v("#")]),t._v(" 创建分支命令")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch (branchname)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"切换分支命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切换分支命令"}},[t._v("#")]),t._v(" 切换分支命令:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout (branchname)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"合并分支命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并分支命令"}},[t._v("#")]),t._v(" 合并分支命令:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git merge \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"列出分支基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列出分支基本命令"}},[t._v("#")]),t._v(" 列出分支基本命令：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("没有参数时，"),s("strong",[t._v("git branch")]),t._v(" 会列出你在本地的分支。")]),t._v(" "),s("p",[t._v("当你执行 "),s("strong",[t._v("git init")]),t._v(" 的时候，默认情况下 Git 就会为你创建 "),s("strong",[t._v("master")]),t._v(" 分支。")]),t._v(" "),s("h3",{attrs:{id:"创建新分支并立即切换到该分支下-从而在该分支中操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建新分支并立即切换到该分支下-从而在该分支中操作"}},[t._v("#")]),t._v(" 创建新分支并立即切换到该分支下，从而在该分支中操作：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout -b (branchname)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch -d (branchname)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"分支合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支合并"}},[t._v("#")]),t._v(" 分支合并")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git merge (branchname)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("查看分支："),s("code",[t._v("git branch")])]),t._v(" "),s("p",[t._v("创建分支："),s("code",[t._v("git branch <name>")])]),t._v(" "),s("p",[t._v("切换分支："),s("code",[t._v("git checkout <name>")]),t._v("或者"),s("code",[t._v("git switch <name>")])]),t._v(" "),s("p",[t._v("创建+切换分支："),s("code",[t._v("git checkout -b <name>")]),t._v("或者"),s("code",[t._v("git switch -c <name>")])]),t._v(" "),s("p",[t._v("合并某分支到当前分支："),s("code",[t._v("git merge <name>")])]),t._v(" "),s("p",[t._v("删除分支："),s("code",[t._v("git branch -d <name>")])]),t._v(" "),s("h3",{attrs:{id:"合并冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并冲突"}},[t._v("#")]),t._v(" 合并冲突")]),t._v(" "),s("p",[t._v("合并并不仅仅是简单的文件添加、移除的操作，Git 也会合并修改。")]),t._v(" "),s("p",[t._v("当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。")]),t._v(" "),s("p",[t._v("解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。")]),t._v(" "),s("p",[t._v("用"),s("code",[t._v("git log --graph")]),t._v("命令可以看到分支合并图。")]),t._v(" "),s("h2",{attrs:{id:"git-查看提交历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-查看提交历史"}},[t._v("#")]),t._v(" Git 查看提交历史")]),t._v(" "),s("p",[t._v("Git 提交历史一般常用两个命令：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("git log")]),t._v(" - 查看历史提交记录。")]),t._v(" "),s("li",[s("strong",[t._v("git blame < file >")]),t._v(" - 以列表形式查看指定文件的历史修改记录。")])]),t._v(" "),s("h3",{attrs:{id:"git-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),s("p",[t._v("在使用 Git 提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，我们可以使用 git log 命令查看。")]),t._v(" "),s("p",[t._v("我们可以用 --oneline 选项来查看历史记录的简洁的版本。")]),t._v(" "),s("p",[t._v("git log --oneline")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\ncommit acd835ed1fe792c687a643304d34af3b3c3bfa9f "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master, origin/master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAuthor: cats1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("571798499")]),t._v("@qq.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Fri Jan "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":04:55 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" +0800\n\n    new "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" demo.txt\n\ncommit db6f72deb961a7b4b79b4618662cf32279af8419\nAuthor: cats1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("571798499")]),t._v("@qq.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Fri Jan "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":57:40 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v(" +0800\n\n    first commit\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --oneline\nacd835e "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master, origin/master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" new "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" demo.txt\ndb6f72d first commit\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\nacd835ed1fe792c687a643304d34af3b3c3bfa9f "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master, origin/master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" new "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" demo.txt\ndb6f72deb961a7b4b79b4618662cf32279af8419 first commit\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("p",[t._v("我们还可以用 --graph 选项，查看历史中什么时候出现了分支、合并。以下为相同的命令，开启了拓扑图选项：")]),t._v(" "),s("p",[t._v("你也可以用 "),s("strong",[t._v("--reverse")]),t._v(" 参数来逆向显示所有日志。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git log --reverse --oneline\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果只想查找指定用户的提交日志可以使用命令：git log --author , 例如，比方说我们要找 Git 源码中 Linus 提交的部分：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git log --author=Linus --oneline -5\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果你要指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git log --oneline --before={3.weeks.ago} --after={2010-04-18} --no-merges\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"git-blame"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-blame"}},[t._v("#")]),t._v(" git blame")]),t._v(" "),s("p",[t._v("如果要查看指定文件的修改记录可以使用 git blame 命令，格式如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git blame <file>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"版本回退"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),s("p",[t._v("版本回退")]),t._v(" "),s("p",[s("code",[t._v("git reset")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git reset --hard HEAD^\nHEAD is now at e475afc add distributed\n$ git reset --hard db6f7\nHEAD is now at db6f72d first commit\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("Git提供了一个命令"),s("code",[t._v("git reflog")]),t._v("用来记录你的每一次命令")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git reflog\ndb6f72d (HEAD -> master) HEAD@{0}: reset: moving to db6f7\nacd835e (origin/master) HEAD@{1}: commit: new add demo.txt\ndb6f72d (HEAD -> master) HEAD@{2}: commit (initial): first commit\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[s("code",[t._v("HEAD")]),t._v("指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令"),s("code",[t._v("git reset --hard commit_id")]),t._v("。")]),t._v(" "),s("li",[t._v("穿梭前，用"),s("code",[t._v("git log")]),t._v("可以查看提交历史，以便确定要回退到哪个版本。")]),t._v(" "),s("li",[t._v("要重返未来，用"),s("code",[t._v("git reflog")]),t._v("查看命令历史，以便确定要回到未来的哪个版本。")])]),t._v(" "),s("h2",{attrs:{id:"git-标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-标签"}},[t._v("#")]),t._v(" Git 标签")]),t._v(" "),s("p",[t._v("如果你达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签。")]),t._v(" "),s("p",[t._v("查看所有标签可以使用以下命令：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git tag\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("指定标签信息命令：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git tag -a <tagname> -m "runoob.com标签"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("删除标签")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git tag -d v0.1\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。")]),t._v(" "),s("p",[t._v("如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git tag -d v0.9\nDeleted tag 'v0.9' (was f52c633)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("然后，从远程删除。删除命令也是push，但是格式如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git push origin :refs/tags/v0.9\nTo github.com:michaelliao/learngit.git\n - [deleted]         v0.9\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("可以用"),s("code",[t._v("git show <tagname>")]),t._v("查看标签信息")]),t._v(" "),s("p",[t._v("还可以创建带有说明的标签，用"),s("code",[t._v("-a")]),t._v("指定标签名，"),s("code",[t._v("-m")]),t._v("指定说明文字：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ git tag -a v0.1 -m "version 0.1 released" 1094adb\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("用命令"),s("code",[t._v("git show <tagname>")]),t._v("可以看到说明文字")]),t._v(" "),s("p",[t._v("如果要推送某个标签到远程，使用命令"),s("code",[t._v("git push origin <tagname>")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git push origin v1.0\nTotal 0 (delta 0), reused 0 (delta 0)\nTo github.com:michaelliao/learngit.git\n * [new tag]         v1.0 -> v1.0\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("或者，一次性推送全部尚未推送到远程的本地标签：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git push origin --tags\nTotal 0 (delta 0), reused 0 (delta 0)\nTo github.com:michaelliao/learngit.git\n * [new tag]         v0.9 -> v0.9\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("命令"),s("code",[t._v("git tag <tagname>")]),t._v("用于新建一个标签，默认为"),s("code",[t._v("HEAD")]),t._v("，也可以指定一个commit id；")]),t._v(" "),s("li",[t._v("命令"),s("code",[t._v('git tag -a <tagname> -m "blablabla..."')]),t._v("可以指定标签信息；")]),t._v(" "),s("li",[t._v("命令"),s("code",[t._v("git tag")]),t._v("可以查看所有标签。")]),t._v(" "),s("li",[t._v("命令"),s("code",[t._v("git push origin <tagname>")]),t._v("可以推送一个本地标签；")]),t._v(" "),s("li",[t._v("命令"),s("code",[t._v("git push origin --tags")]),t._v("可以推送全部未推送过的本地标签；")]),t._v(" "),s("li",[t._v("命令"),s("code",[t._v("git tag -d <tagname>")]),t._v("可以删除一个本地标签；")]),t._v(" "),s("li",[t._v("命令"),s("code",[t._v("git push origin :refs/tags/<tagname>")]),t._v("可以删除一个远程标签。")])]),t._v(" "),s("h2",{attrs:{id:"git-远程仓库-github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-远程仓库-github"}},[t._v("#")]),t._v(" Git 远程仓库(Github)")]),t._v(" "),s("h3",{attrs:{id:"添加远程库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加远程库"}},[t._v("#")]),t._v(" 添加远程库")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote add [shortname] [url]\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"查看当前的远程库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看当前的远程库"}},[t._v("#")]),t._v(" 查看当前的远程库")]),t._v(" "),s("p",[t._v("要查看当前配置有哪些远程仓库，可以用命令：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("执行时加上 -v 参数，你还可以看到每个别名的实际链接地址。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git remote\norigin\n$ git remote -v\norigin    git@github.com:tianqixin/runoob-git-test.git (fetch)\norigin    git@github.com:tianqixin/runoob-git-test.git (push)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"提取远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提取远程仓库"}},[t._v("#")]),t._v(" 提取远程仓库")]),t._v(" "),s("p",[t._v("Git 有两个命令用来提取远程仓库的更新。")]),t._v(" "),s("p",[t._v("1、从远程仓库下载新分支与数据：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git fetch\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("该命令执行完后需要执行 git merge 远程分支到你所在的分支。")]),t._v(" "),s("p",[t._v("2、从远端仓库提取数据并尝试合并到当前分支：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git merge\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("该命令就是在执行 git fetch 之后紧接着执行 git merge 远程分支到你所在的任意分支。")]),t._v(" "),s("h3",{attrs:{id:"推送到远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#推送到远程仓库"}},[t._v("#")]),t._v(" 推送到远程仓库")]),t._v(" "),s("p",[t._v("推送你的新分支与数据到某个远端仓库命令:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git push [alias] [branch]\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("以上命令将你的 [branch] 分支推送成为 [alias] 远程仓库上的 [branch] 分支，实例如下。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ touch runoob-test.txt      # 添加文件\n$ git add runoob-test.txt \n$ git commit -m "添加到远程"\nmaster 69e702d] 添加到远程\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 runoob-test.txt\n\n$ git push origin master    # 推送到 Github\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"删除远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除远程仓库"}},[t._v("#")]),t._v(" 删除远程仓库")]),t._v(" "),s("p",[t._v("删除远程仓库你可以使用命令：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote rm [别名]\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"多人协作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多人协作"}},[t._v("#")]),t._v(" 多人协作")]),t._v(" "),s("p",[t._v("多人协作时，大家都会往"),s("code",[t._v("master")]),t._v("和"),s("code",[t._v("dev")]),t._v("分支上推送各自的修改。")]),t._v(" "),s("p",[t._v("当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的"),s("code",[t._v("master")]),t._v("分支。不信可以用"),s("code",[t._v("git branch")]),t._v("命令看看：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git branch\n* master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("现在，你的小伙伴要在"),s("code",[t._v("dev")]),t._v("分支上开发，就必须创建远程"),s("code",[t._v("origin")]),t._v("的"),s("code",[t._v("dev")]),t._v("分支到本地，于是他用这个命令创建本地"),s("code",[t._v("dev")]),t._v("分支：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git checkout -b dev origin/dev\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("多人协作的工作模式通常是这样：")]),t._v(" "),s("ol",[s("li",[t._v("首先，可以试图用"),s("code",[t._v("git push origin <branch-name>")]),t._v("推送自己的修改；")]),t._v(" "),s("li",[t._v("如果推送失败，则因为远程分支比你的本地更新，需要先用"),s("code",[t._v("git pull")]),t._v("试图合并；")]),t._v(" "),s("li",[t._v("如果合并有冲突，则解决冲突，并在本地提交；")]),t._v(" "),s("li",[t._v("没有冲突或者解决掉冲突后，再用"),s("code",[t._v("git push origin <branch-name>")]),t._v("推送就能成功！")])]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("git pull")]),t._v("提示"),s("code",[t._v("no tracking information")]),t._v("，则说明本地分支和远程分支的链接关系没有创建，用命令"),s("code",[t._v("git branch --set-upstream-to <branch-name> origin/<branch-name>")]),t._v("。")]),t._v(" "),s("p",[t._v("这就是多人协作的工作模式，一旦熟悉了，就非常简单。")]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("ul",[s("li",[t._v("查看远程库信息，使用"),s("code",[t._v("git remote -v")]),t._v("；")]),t._v(" "),s("li",[t._v("本地新建的分支如果不推送到远程，对其他人就是不可见的；")]),t._v(" "),s("li",[t._v("从本地推送分支，使用"),s("code",[t._v("git push origin branch-name")]),t._v("，如果推送失败，先用"),s("code",[t._v("git pull")]),t._v("抓取远程的新提交；")]),t._v(" "),s("li",[t._v("在本地创建和远程分支对应的分支，使用"),s("code",[t._v("git checkout -b branch-name origin/branch-name")]),t._v("，本地和远程分支的名称最好一致；")]),t._v(" "),s("li",[t._v("建立本地分支和远程分支的关联，使用"),s("code",[t._v("git branch --set-upstream branch-name origin/branch-name")]),t._v("；")]),t._v(" "),s("li",[t._v("从远程抓取分支，使用"),s("code",[t._v("git pull")]),t._v("，如果有冲突，要先处理冲突。")])]),t._v(" "),s("h2",{attrs:{id:"git提交规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git提交规范"}},[t._v("#")]),t._v(" Git提交规范")])])}),[],!1,null,null,null);a.default=r.exports}}]);