(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{453:function(s,t,e){"use strict";e.r(t);var a=e(42),v=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"js基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js基础"}},[s._v("#")]),s._v(" js基础")]),s._v(" "),e("h2",{attrs:{id:"dom-常用-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-常用-api"}},[s._v("#")]),s._v(" DOM 常用 API")]),s._v(" "),e("p",[s._v("可以使用 "),e("code",[s._v("document")]),s._v(" 或 "),e("code",[s._v("window")]),s._v(" 元素的 API 来操作文档本身或获取文档的子类")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 获取元素\nconst node = document.getElementById(id); // 或者 querySelector(\".class|#id|name\");\n// 创建元素\nconst heading = document.createElement(name); // name: p、div、h1...\nheading.innerHTML = '';\n// 添加元素\ndocument.body.appendChild(heading);\n// 删除元素\ndocument.body.removeChild(node);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"null-和-undefined-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#null-和-undefined-的区别"}},[s._v("#")]),s._v(" null 和 undefined 的区别")]),s._v(" "),e("ul",[e("li",[e("p",[e("code",[s._v("null")]),s._v("：")]),s._v(" "),e("p",[e("code",[s._v("null")]),s._v("是**“不代表任何值的值”**。"),e("code",[s._v("null")]),s._v("是已明确定义给变量的值。在此示例中，当"),e("code",[s._v("fs.readFile")]),s._v("方法未引发错误时，我们将获得"),e("code",[s._v("null")]),s._v("值")])])]),s._v(" "),e("ol",[e("li",[e("code",[s._v("Number(null)")]),s._v(" 得到 "),e("code",[s._v("0")]),s._v("。")]),s._v(" "),e("li",[s._v("作为函数的参数，表示该函数的参数不是对象。")]),s._v(" "),e("li",[s._v("作为对象原型链的终点。"),e("code",[s._v("Object.prototype.__proto__ === null")]),s._v("。")]),s._v(" "),e("li",[s._v("Boolean(null)===false或!!null===false")])]),s._v(" "),e("ul",[e("li",[e("p",[e("code",[s._v("undefined")]),s._v("：")]),s._v(" "),e("p",[e("code",[s._v("undefined")]),s._v("是未指定特定值的变量的默认值，或者没有显式返回值的函数，如："),e("code",[s._v("console.log(1)")]),s._v("，还包括对象中不存在的属性，这些 JS 引擎都会为其分配 "),e("code",[s._v("undefined")]),s._v(" 值。")]),s._v(" "),e("p",[s._v("Boolean("),e("code",[s._v("undefined")]),s._v(")===false或!!"),e("code",[s._v("undefined")]),s._v("===false")])])]),s._v(" "),e("ol",[e("li",[e("code",[s._v("Number(undefined)")]),s._v(" 得到 "),e("code",[s._v("NaN")]),s._v("。")]),s._v(" "),e("li",[s._v("变量被声明但是没有赋值，等于 "),e("code",[s._v("undefined")]),s._v("。")]),s._v(" "),e("li",[s._v("调用函数时，对应的参数没有提供，也是 "),e("code",[s._v("undefined")]),s._v("。")]),s._v(" "),e("li",[s._v("对象没有赋值，这个属性的值为 "),e("code",[s._v("undefined")]),s._v("。")]),s._v(" "),e("li",[s._v("函数没有返回值，默认返回 "),e("code",[s._v("undefined")]),s._v("。")])]),s._v(" "),e("p",[s._v("在比较"),e("code",[s._v("null")]),s._v("和"),e("code",[s._v("undefined")]),s._v("时，我们使用"),e("code",[s._v("==")]),s._v("时得到"),e("code",[s._v("true")]),s._v("，使用"),e("code",[s._v("===")]),s._v("时得到"),e("code",[s._v("false")]),s._v(":")]),s._v(" "),e("h2",{attrs:{id:"事件流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件流"}},[s._v("#")]),s._v(" 事件流")]),s._v(" "),e("p",[s._v("什么是事件流：事件流描述的是从页面中接收事件的顺序，"),e("code",[s._v("DOM 2")]),s._v(" 级事件流包括下面几个阶段。")]),s._v(" "),e("ul",[e("li",[s._v("事件捕获阶段")]),s._v(" "),e("li",[s._v("处于目标阶段")]),s._v(" "),e("li",[s._v("事件冒泡阶段")])]),s._v(" "),e("h3",{attrs:{id:"addeventlistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addeventlistener"}},[s._v("#")]),s._v(" addEventListener")]),s._v(" "),e("p",[e("code",[s._v("addEventListener")]),s._v(" 方法将指定的监听器注册到 "),e("code",[s._v("EventTarget")]),s._v(" 上，当该对象触发指定的事件时，指定的回调函数就会被执行。")]),s._v(" "),e("p",[e("code",[s._v("addEventListener")]),s._v(" 事件目标可以是文档上的元素 "),e("code",[s._v("Element")]),s._v("、"),e("code",[s._v("Document")]),s._v(" 和 "),e("code",[s._v("Window")]),s._v(" 或者任何其他支持事件的对象（例如 "),e("code",[s._v("XMLHttpRequest")]),s._v("）。")]),s._v(" "),e("ul",[e("li",[s._v("语法："),e("code",[s._v("target.addEventListener(type, listener, options/useCapture)")])])]),s._v(" "),e("ol",[e("li",[e("code",[s._v("type")]),s._v("：表示监听事件类型的字符串")]),s._v(" "),e("li",[e("code",[s._v("listener")]),s._v("：所监听的事件触发，会接受一个事件通知对象。")]),s._v(" "),e("li",[e("code",[s._v("options")]),s._v("：一个指定有关 "),e("code",[s._v("listener")]),s._v(" 属性的可选参数对象。可选值有 "),e("code",[s._v("capture")]),s._v("（事件捕获阶段传播到这里触发）、"),e("code",[s._v("once")]),s._v("（在 "),e("code",[s._v("listener")]),s._v(" 添加之后最多值调用一次）、"),e("code",[s._v("passive")]),s._v("（设置为 "),e("code",[s._v("true")]),s._v(" 时表示 "),e("code",[s._v("listener")]),s._v(" 永远不会调用 "),e("code",[s._v("preventDefault()")]),s._v("）。")]),s._v(" "),e("li",[e("code",[s._v("useCapture")]),s._v("：在 DOM 树中，注册了 "),e("code",[s._v("listener")]),s._v(" 的元素，是否要先于它下面的 "),e("code",[s._v("EventTarget")]),s._v(" 调用该 "),e("code",[s._v("listener")]),s._v("。")])]),s._v(" "),e("p",[e("code",[s._v("addEventListener")]),s._v(" 的第三个参数涉及到冒泡和捕获，为 "),e("code",[s._v("true")]),s._v(" 时是捕获，为 "),e("code",[s._v("false")]),s._v(" 时是冒泡。")]),s._v(" "),e("h3",{attrs:{id:"原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),e("p",[s._v("事件捕获和事件冒泡分别是 "),e("strong",[s._v("网景")]),s._v("（Netscape）和 "),e("strong",[s._v("IE")]),s._v(" 对 "),e("code",[s._v("DOM")]),s._v(" 事件产生顺序的描述。")]),s._v(" "),e("p",[e("strong",[s._v("网景")]),s._v(" 认为 "),e("code",[s._v("DOM")]),s._v(" 接收的事件应该最先是 "),e("code",[s._v("window")]),s._v("，然后到 "),e("code",[s._v("document")]),s._v("，接着一层一层往下，最后才到具体的元素接收到事件，即 "),e("strong",[s._v("事件捕获")]),s._v("。")]),s._v(" "),e("p",[e("strong",[s._v("IE")]),s._v(" 则认为 "),e("code",[s._v("DOM")]),s._v(" 事件应该是具体元素先接收到，然后再一层一层往上，接着到 "),e("code",[s._v("document")]),s._v("，最后才到 "),e("code",[s._v("window")]),s._v("，即 "),e("strong",[s._v("事件冒泡")]),s._v("。")]),s._v(" "),e("p",[s._v("最后 "),e("strong",[s._v("W3C")]),s._v(" 对这两种方案进行了统一：将 "),e("code",[s._v("DOM")]),s._v(" 事件分为两个阶段，事件捕获和事件冒泡阶段。")]),s._v(" "),e("p",[s._v("当一个元素被点击，首先是事件捕获阶段，"),e("code",[s._v("window")]),s._v(" 最先接收事件，然后一层一层往下捕获，最后由具体元素接收；之后再由具体元素再一层一层往上冒泡，到 "),e("code",[s._v("window")]),s._v(" 接收事件。")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("事件冒泡")]),s._v("：当给某个目标元素绑定了事件之后，这个事件会依次在它的父级元素中被触发（当然前提是这个父级元素也有这个同名称的事件，比如子元素和父元素都绑定了 "),e("code",[s._v("click")]),s._v(" 事件就触发父元素的 "),e("code",[s._v("click")]),s._v("）。")]),s._v(" "),e("li",[e("strong",[s._v("事件捕获")]),s._v("：和冒泡相反，会从上层传递到下层。")])]),s._v(" "),e("h3",{attrs:{id:"阻止冒泡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阻止冒泡"}},[s._v("#")]),s._v(" 阻止冒泡")]),s._v(" "),e("p",[s._v("event.stopPropagation();")]),s._v(" "),e("p",[s._v("并不是所有的事件都有冒泡，例如：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("onblur")])]),s._v(" "),e("li",[e("code",[s._v("onfocus")])]),s._v(" "),e("li",[e("code",[s._v("onmouseenter")])]),s._v(" "),e("li",[e("code",[s._v("onmouseleave")])])]),s._v(" "),e("h2",{attrs:{id:"typeof-和-instanceof-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeof-和-instanceof-的区别"}},[s._v("#")]),s._v(" typeof 和 instanceof 的区别")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("typeof")]),s._v("：对某个变量类型的检测，基本类型除了 "),e("code",[s._v("null")]),s._v(" 之外，都能正常地显示为对应的类型，引用类型除了函数会显示为 "),e("code",[s._v("function")]),s._v("，其他都显示为 "),e("code",[s._v("object")]),s._v("。")]),s._v(" "),e("li",[e("code",[s._v("instanceof")]),s._v(" 主要用于检测某个构造函数的原型对象在不在某个对象的原型链上。")])]),s._v(" "),e("h2",{attrs:{id:"一句话描述-this"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一句话描述-this"}},[s._v("#")]),s._v(" 一句话描述 this")]),s._v(" "),e("p",[s._v("对于函数而言，指向最后调用函数的那个对象，是函数运行时内部自动生成的一个内部对象，只能在函数内部使用；对于全局而言，"),e("code",[s._v("this")]),s._v(" 指向 "),e("code",[s._v("window")]),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"js-位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-位置"}},[s._v("#")]),s._v(" JS 位置")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("clientHeight")]),s._v("：表示可视区域的高度，不包含 "),e("code",[s._v("border")]),s._v(" 和滚动条")]),s._v(" "),e("li",[e("code",[s._v("offsetHeight")]),s._v("：表示可视区域的高度，包含了 "),e("code",[s._v("border")]),s._v(" 和滚动条")]),s._v(" "),e("li",[e("code",[s._v("scrollHeight")]),s._v("：表示了所有区域的高度，包含了因为滚动被隐藏的部分")]),s._v(" "),e("li",[s._v("clientTop"),e("code",[s._v("：表示边框")]),s._v("border"),e("code",[s._v("的厚度，在未指定的情况下一般为")]),s._v("0")]),s._v(" "),e("li",[e("code",[s._v("scrollTop")]),s._v("：滚动后被隐藏的高度，获取对象相对于由 "),e("code",[s._v("offsetParent")]),s._v(" 属性指定的父坐标（CSS 定位的元素或 "),e("code",[s._v("body")]),s._v(" 元素）距离顶端的高度")])]),s._v(" "),e("h2",{attrs:{id:"js-拖拽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-拖拽"}},[s._v("#")]),s._v(" JS 拖拽")]),s._v(" "),e("ol",[e("li",[s._v("通过 "),e("code",[s._v("mousedown")]),s._v("、"),e("code",[s._v("mousemove")]),s._v("、"),e("code",[s._v("mouseup")]),s._v(" 方法实现")]),s._v(" "),e("li",[s._v("通过 HTML5 的 "),e("code",[s._v("Drag")]),s._v(" 和 "),e("code",[s._v("Drop")]),s._v(" 实现")])]),s._v(" "),e("h2",{attrs:{id:"settimeout-实现-setinterval"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-实现-setinterval"}},[s._v("#")]),s._v(" setTimeout 实现 setInterval")]),s._v(" "),e("h2",{attrs:{id:"实现-sleep"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现-sleep"}},[s._v("#")]),s._v(" 实现 Sleep")]),s._v(" "),e("p",[s._v("实现 "),e("code",[s._v("1000")]),s._v(" 毫秒后执行其他内容：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const sleep = time => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(time);\n    }, time);\n  });\n};\nsleep(1000).then((res) => {\n  console.log(res);\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h2",{attrs:{id:"执行上下文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[s._v("#")]),s._v(" 执行上下文")]),s._v(" "),e("p",[s._v("JavaScript 中有 3 种执行上下文类型：")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("全局执行上下文")]),s._v("：这是默认或者说基础的上下文，任何不在函数内部的代码都在全局上下文中。它会执行两件事：创建一个全局的 "),e("code",[s._v("window")]),s._v(" 对象（浏览器的情况下），并且设置 "),e("code",[s._v("this")]),s._v(" 的值等于这个全局对象。一个程序中只会有一个全局执行上下文。")]),s._v(" "),e("li",[e("strong",[s._v("函数执行上下文")]),s._v("：每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都有它自己的执行上下文，不过是在函数被调用时创建的。函数上下文可以有任意多个。每当一个新的执行上下文被创建，它会按定义的顺序执行一系列步骤。")]),s._v(" "),e("li",[e("strong",[s._v("Eval 函数执行上下文")]),s._v("：执行在 "),e("code",[s._v("eval")]),s._v(" 函数内部的代码也会有它属于自己的执行上下文，但由于 JavaScript 开发者并不经常使用 "),e("code",[s._v("eval")]),s._v("，所以在这里我不会讨论它。")])]),s._v(" "),e("h3",{attrs:{id:"执行栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行栈"}},[s._v("#")]),s._v(" 执行栈")]),s._v(" "),e("p",[s._v("执行栈，也就是在其它编程语言中所说的 “调用栈”，是一种拥有 "),e("code",[s._v("LIFO")]),s._v("（后进先出）数据结构的栈，被用来存储代码运行时创建的所有执行上下文。")]),s._v(" "),e("h2",{attrs:{id:"函数式编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[s._v("#")]),s._v(" 函数式编程")]),s._v(" "),e("p",[s._v("函数式编程（Functional Programming，简称 FP）。")]),s._v(" "),e("p",[s._v("函数式编程：通过对面向对象式编程代码的拆分，将各个功能独立出来，从而达到功能独立、易复用等目的。")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @name 改变人名展示方式\n * @param {array} arr 需要改变的数组\n * @param {string} type 支持不同格式的人名\n */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("changeName")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" item"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("name")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("toUpperCase")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @name 数组改变成对象\n * @param {array} arr 需要改变的数组\n * @param {string} key 对应变成什么字段\n * @return {object} 返回改变后的对象\n */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("arrToObj")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" arr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("item")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" item "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("arrToObj")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("changeName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'john-reese'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'harold-finch'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sameen-shaw'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ { name: 'John Reese' }, { name: 'Harold Finch' }, { name: 'Sameen Shaw' } ]")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h3",{attrs:{id:"函数式编程特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程特点"}},[s._v("#")]),s._v(" 函数式编程特点")]),s._v(" "),e("ol",[e("li",[e("strong",[s._v("函数是一等公民")]),s._v("。可以利用这点让它支持抽取到外部。")]),s._v(" "),e("li",[e("strong",[s._v("声明做某件时间")]),s._v("。函数式编程大多数声明某个函数需要做什么，而不是它怎么做的。")]),s._v(" "),e("li",[e("strong",[s._v("便于垃圾回收")]),s._v("。函数内部的变量方便垃圾回收，不会产生太多的变量，用户不需要大量的定义。")]),s._v(" "),e("li",[e("strong",[s._v("数据不可变")]),s._v("。函数式编程要求所有的数据都是不可变的，如果需要修改某个对象，应该新建后再修改，而不是污染原本的数据。")]),s._v(" "),e("li",[e("strong",[s._v("无状态")]),s._v("。不管什么时候运行，同一个函数对相同的输入返回相同的输出，而不依赖外部状态的变化。")]),s._v(" "),e("li",[e("strong",[s._v("无副作用")]),s._v("。功能 A 应该仅仅为了完成它的实现，而不会随着外部的改变而改变，这样当它执行完毕之后，就可以将其内部数据进行回收。并且它不会修改传入的参数。")])]),s._v(" "),e("p",[s._v("注重引用值（Object、Array）的传递，尽可能不要污染传入的数据。")]),s._v(" "),e("h3",{attrs:{id:"纯函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#纯函数"}},[s._v("#")]),s._v(" 纯函数")]),s._v(" "),e("p",[s._v("纯函数的概念有 2 点：")]),s._v(" "),e("ol",[e("li",[e("strong",[s._v("不依赖外部状态（无状态）")]),s._v("：函数的运行结果不依赖全局变量，"),e("code",[s._v("this")]),s._v(" 指针，"),e("code",[s._v("IO")]),s._v(" 操作等。")]),s._v(" "),e("li",[e("strong",[s._v("没有副作用（数据不变）")]),s._v("：不修改全局变量，不修改入参。")])]),s._v(" "),e("p",[s._v("优点：")]),s._v(" "),e("ul",[e("li",[s._v("便于测试和优化")]),s._v(" "),e("li",[s._v("可缓存性")]),s._v(" "),e("li",[s._v("自文档化")]),s._v(" "),e("li",[s._v("更少 Bug")])]),s._v(" "),e("h2",{attrs:{id:"渐进式网络应用-pwa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渐进式网络应用-pwa"}},[s._v("#")]),s._v(" 渐进式网络应用（PWA）")]),s._v(" "),e("p",[s._v("渐进式网络应用（PWA）是谷歌在 2015 年底提出的概念。基本上算是 Web 应用程序，但在外观和感觉上与原生 App 类似。支持 PWA 的网站可以提供脱机工作、推送通知和设备硬件访问等功能。")]),s._v(" "),e("h3",{attrs:{id:"优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[s._v("#")]),s._v(" 优点")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("更小更快")]),s._v(": 渐进式的 Web 应用程序比原生应用程序小得多。他们甚至不需要安装。这是他们没有浪费磁盘空间和加载速度非常快。")]),s._v(" "),e("li",[e("strong",[s._v("响应式界面")]),s._v(": PWA 支持的网页能够自动适应各种屏幕大小。它可以是手机、平板、台式机或笔记本。")]),s._v(" "),e("li",[e("strong",[s._v("无需更新")]),s._v(": 大多数移动应用程序需要每周定期更新。与普通网站一样，每当用户交互发生且不需要应用程序或游戏商店批准时，PWA 总是加载最新更新版本。")]),s._v(" "),e("li",[e("strong",[s._v("高性价比")]),s._v("：原生移动应用需要分别为 Android 和 iOS 设备开发，开发成本非常高。另一方面，PWA 有着相同的功能，但只是先前价格的一小部分，开发成本低。")]),s._v(" "),e("li",[e("strong",[s._v("SEO 优势")]),s._v("：搜索引擎可以发现 PWA，并且加载速度非常快。就像其他网站一样，它们的链接也可以共享。提供良好的用户体验和结果，在 SEO 排名提高。")]),s._v(" "),e("li",[e("strong",[s._v("脱机功能")]),s._v("：由于 Service Worker API 的支持，可以在脱机或低internet连接中访问PWAs。")]),s._v(" "),e("li",[e("strong",[s._v("安全性")]),s._v("：PWA 通过 HTTPS 连接传递，并在每次交互中保护用户数据。")]),s._v(" "),e("li",[e("strong",[s._v("推送通知")]),s._v("：通过推送通知的支持，PWA 轻松地与用户进行交互，提供非常棒的用户体验。")]),s._v(" "),e("li",[e("strong",[s._v("绕过应用商店")]),s._v("：原生 App 如果需要任何新的更新，需要应用商店几天的审批，且有被拒绝或禁止的可能性，对于这方面来说，PWA 有它独特的优势，不需要 App Store 支持。更新版本可以直接从 Web 服务器加载，无需 App Store 批准。")]),s._v(" "),e("li",[e("strong",[s._v("零安装")]),s._v("：在浏览过程中，PWA 会在手机和平板电脑上有自己的图标，就像移动应用程序一样，但不需要经过冗长的安装过程。")])]),s._v(" "),e("h3",{attrs:{id:"缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("对系统功能的访问权限较低")]),s._v("：目前 PWA 对本机系统功能的访问权限比原生 App 有限。而且，所有的浏览器都不支持它的全部功能，但可能在不久的将来，它将成为新的开发标准。")]),s._v(" "),e("li",[e("strong",[s._v("多数 Android，少数 iOS")]),s._v("：目前更多的支持来自 Android。iOS 系统只提供了部分。")]),s._v(" "),e("li",[e("strong",[s._v("没有审查标准")]),s._v("：PWA 不需要任何适用于应用商店中本机应用的审查，这可能会加快进程，但缺乏从应用程序商店中获取推广效益。")])]),s._v(" "),e("h2",{attrs:{id:"规范化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规范化"}},[s._v("#")]),s._v(" 规范化")]),s._v(" "),e("h3",{attrs:{id:"commonjs-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-规范"}},[s._v("#")]),s._v(" CommonJS 规范")]),s._v(" "),e("ul",[e("li",[s._v("导出："),e("code",[s._v("module.exports = {}")]),s._v("、"),e("code",[s._v("exports.xxx = 'xxx'")])]),s._v(" "),e("li",[s._v("导入："),e("code",[s._v("require(./index.js)")])]),s._v(" "),e("li",[s._v("查找方式：查找当前目录是否具有文件，没有则查找当前目录的 "),e("code",[s._v("node_modules")]),s._v(" 文件。再没有，冒泡查询，一直往系统中的 "),e("code",[s._v("npm")]),s._v(" 目录查找。")])]),s._v(" "),e("p",[s._v("它的特点：")]),s._v(" "),e("ol",[e("li",[s._v("所有代码在模块作用域内运行，不会污染其他文件")]),s._v(" "),e("li",[e("code",[s._v("require")]),s._v(" 得到的值是值的拷贝，即你引用其他 JS 文件的变量，修改操作了也不会影响其他文件")])]),s._v(" "),e("p",[s._v("它也有自己的缺陷：")]),s._v(" "),e("ol",[e("li",[s._v("应用层面。在 "),e("code",[s._v("index.html")]),s._v(" 中做 "),e("code",[s._v("var index = require('./index.js')")]),s._v(" 操作报错，因为它最终是后台执行的，只能是 "),e("code",[s._v("index.js")]),s._v(" 引用 "),e("code",[s._v("index2.js")]),s._v(" 这种方式。")]),s._v(" "),e("li",[s._v("同步加载问题。"),e("code",[s._v("CommonJS")]),s._v(" 规范中模块是同步加载的，即在 "),e("code",[s._v("index.js")]),s._v(" 中加载 "),e("code",[s._v("index2.js")]),s._v("，如果 "),e("code",[s._v("index2.js")]),s._v(" 卡住了，那就要等很久。")])]),s._v(" "),e("h3",{attrs:{id:"amd-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#amd-规范"}},[s._v("#")]),s._v(" AMD 规范")]),s._v(" "),e("p",[s._v("可以采用异步方式加载模块。"),e("code",[s._v("AMD")]),s._v(" 是 "),e("code",[s._v("Asynchronous Module Definition")]),s._v(" 的缩写，也就是 “异步模块定义”，记住这个 "),e("code",[s._v("async")]),s._v(" 就知道它是异步的了。")]),s._v(" "),e("h3",{attrs:{id:"cmd-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmd-规范"}},[s._v("#")]),s._v(" CMD 规范")]),s._v(" "),e("p",[s._v("CMD (Common Module Definition), 是 seajs 推崇的规范，CMD 则是依赖就近，用的时候再 "),e("code",[s._v("require")]),s._v("。")]),s._v(" "),e("p",[s._v("AMD 和 CMD 最大的区别是对依赖模块的执行时机处理不同，注意不是加载的时机或者方式不同，二者皆为异步加载模块。")]),s._v(" "),e("h3",{attrs:{id:"es6-modules-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6-modules-规范"}},[s._v("#")]),s._v(" ES6 Modules 规范")]),s._v(" "),e("ul",[e("li",[s._v("导出：")])]),s._v(" "),e("ol",[e("li",[e("code",[s._v("export a")])]),s._v(" "),e("li",[e("code",[s._v("export { a }")])]),s._v(" "),e("li",[e("code",[s._v("export { a as jsliang }")])]),s._v(" "),e("li",[e("code",[s._v("export default function() {}")])])]),s._v(" "),e("ul",[e("li",[s._v("导入：")])]),s._v(" "),e("ol",[e("li",[e("code",[s._v("import './index'")])]),s._v(" "),e("li",[e("code",[s._v("import { a } from './index.js'")])]),s._v(" "),e("li",[e("code",[s._v("import { a as jsliang } from './index.js'")])]),s._v(" "),e("li",[e("code",[s._v("import * as index from './index.js'")])])]),s._v(" "),e("p",[s._v("特点：")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("export")]),s._v(" 命令和 "),e("code",[s._v("import")]),s._v(" 命令可以出现在模块的任何位置，只要处于模块顶层就可以。 如果处于块级作用域内，就会报错，这是因为处于条件代码块之中，就没法做静态优化了，违背了 ES6 模块的设计初衷。")]),s._v(" "),e("li",[e("code",[s._v("import")]),s._v(" 命令具有提升效果，会提升到整个模块的头部，首先执行。")])]),s._v(" "),e("p",[s._v("和 "),e("code",[s._v("CommonJS")]),s._v(" 区别：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("CommonJS")]),s._v(" 模块是运行时加载，"),e("code",[s._v("ES6 Modules")]),s._v(" 是编译时输出接口")]),s._v(" "),e("li",[e("code",[s._v("CommonJS")]),s._v(" 输出是值的拷贝；"),e("code",[s._v("ES6 Modules")]),s._v(" 输出的是值的引用，被输出模块的内部的改变会影响引用的改变")]),s._v(" "),e("li",[e("code",[s._v("CommonJs")]),s._v(" 导入的模块路径可以是一个表达式，因为它使用的是"),e("code",[s._v("require()")]),s._v(" 方法；而 "),e("code",[s._v("ES6 Modules")]),s._v(" 只能是字符串")]),s._v(" "),e("li",[e("code",[s._v("CommonJS this")]),s._v(" 指向当前模块，"),e("code",[s._v("ES6 Modules")]),s._v(" 的 "),e("code",[s._v("this")]),s._v(" 指向 "),e("code",[s._v("undefined")])]),s._v(" "),e("li",[e("code",[s._v("ES6 Modules")]),s._v(" 中没有这些顶层变量："),e("code",[s._v("arguments")]),s._v("、"),e("code",[s._v("require")]),s._v("、"),e("code",[s._v("module")]),s._v("、"),e("code",[s._v("exports")]),s._v("、"),e("code",[s._v("__filename")]),s._v("、"),e("code",[s._v("__dirname")])])]),s._v(" "),e("h2",{attrs:{id:"babel-编译原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel-编译原理"}},[s._v("#")]),s._v(" babel 编译原理")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("babylon")]),s._v(" 将 "),e("code",[s._v("ES6/ES7")]),s._v(" 代码解析成 "),e("code",[s._v("AST")])]),s._v(" "),e("li",[e("code",[s._v("babel-traverse")]),s._v(" 对 "),e("code",[s._v("AST")]),s._v(" 进行遍历转译，得到新的 "),e("code",[s._v("AST")])]),s._v(" "),e("li",[s._v("新 "),e("code",[s._v("AST")]),s._v(" 通过 "),e("code",[s._v("babel-generator")]),s._v(" 转换成 "),e("code",[s._v("ES5")])])]),s._v(" "),e("h2",{attrs:{id:"代码回收规则如下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码回收规则如下"}},[s._v("#")]),s._v(" "),e("strong",[s._v("代码回收规则如下：")])]),s._v(" "),e("p",[e("strong",[s._v("1.全局变量不会被回收。")])]),s._v(" "),e("p",[e("strong",[s._v("2.局部变量会被回收，也就是函数一旦运行完以后，函数内部的东西都会被销毁。")])]),s._v(" "),e("p",[e("strong",[s._v("3.只要被另外一个作用域所引用就不会被回收")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var i = 1;\nvar i = 2;\nvar add = function() {\n    var i = 0;\n    return function()\n{\n        i++;\n        console.log(i);\n    }\n}();\nadd();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("1：全局变量i不会被回收")]),s._v(" "),e("p",[s._v("2：全局变量add不会被回收")]),s._v(" "),e("p",[s._v("3：闭包引用的局部变量i不会被回收")])])}),[],!1,null,null,null);t.default=v.exports}}]);