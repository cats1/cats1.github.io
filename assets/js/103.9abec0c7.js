(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{466:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器渲染原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染原理"}},[s._v("#")]),s._v(" 浏览器渲染原理")]),s._v(" "),a("p",[s._v("浏览器从服务器那收到的HTML,CSS,JavaScript等相关资源，然后经过一系列处理后渲染出来的web页面的过程")]),s._v(" "),a("h2",{attrs:{id:"流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[s._v("#")]),s._v(" 流程")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("浏览器将获取的HTML文档解析成DOM树")])]),s._v(" "),a("li",[a("p",[s._v("处理CSS标记，构成层叠样式表模型CSSOM(CSS Object Model)")])]),s._v(" "),a("li",[a("p",[s._v("将DOM和CSSOM合并为渲染树(rendering tree)将会被创建，代表一系列将被渲染的对象")])]),s._v(" "),a("li",[a("p",[s._v("渲染树的每个元素包含的内容都是计算过的，它被称之为布局layout。浏览器使用一种流式处理的方法，只需要一次pass绘制操作就可以布局所有的元素(文档流、盒模型、计算大小和位置)")])]),s._v(" "),a("li",[a("p",[s._v("将渲染树的各个节点绘制到屏幕上，这一步被称为绘制painting（把边框颜色、文字颜色、阴影等画出来）")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200525171403420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgxMzcxOA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808191842342.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODQwNzYx,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808172810845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODQwNzYx,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),s._v(" "),a("h3",{attrs:{id:"文档对象模型-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档对象模型-dom"}},[s._v("#")]),s._v(" 文档对象模型 (DOM)")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808173138660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODQwNzYx,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("上图展示了从html的字节码被浏览器处理为DOM的过程")]),s._v(" "),a("ol",[a("li",[s._v("转换：根据字节的编码规则将字节转化为特定字符，也就是characters（字符）")]),s._v(" "),a("li",[s._v("生成tokens：将character转化为w3c定义的各种特定标签 ，生成tokens（令牌）")]),s._v(" "),a("li",[s._v("词法解析：匹配字符串，将tokens按照规则转换为包含特定属性和规则的节点对象（nodes）")]),s._v(" "),a("li",[s._v("DOM构建：根据每个节点的层次关系和规则转换为直观的树形结构，具有明确的父子关系。")])]),s._v(" "),a("p",[s._v("值得一提的是，HTML都是增量构建的，在HTML文件还在传输时html parse就可以开始了。并且是 基于深度优先原则，深度优先就是一条道走到黑，就是一条枝干走到头之后再返回来走另一条枝干。最终我们的得到了页面完整的文档对象模型（DOM），在以后的页面渲染包括布局、绘制等都会用到它。"),a("strong",[s._v("它代表了页面的结构，决定了整个页面的初始格局，而下面的CSS对象模型（CSSOM）决定了页面的五彩斑斓。")])]),s._v(" "),a("h3",{attrs:{id:"css-对象模型-cssom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-对象模型-cssom"}},[s._v("#")]),s._v(" CSS 对象模型 (CSSOM)")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808175928523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODQwNzYx,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("老规矩先放图，上图是CSSOM构建流程图，跟DOM构建差不多的套路，将CSS文件的字节码转换为符合浏览器特定规则的字符，然后浏览器对其进行解析和构成树。")]),s._v(" "),a("p",[s._v("与DOM有所不同的是，其整个的计算过程略有复杂，包括一套复杂的特异度计算规则（CSS属性来源 -> 特异度大小 -> 书写顺序前后覆盖），最终确定每个节点的样式值形成下图的不完整CSSOM。")]),s._v(" "),a("p",[s._v("CSS一直被认为是一种渲染阻塞资源（所谓CSS白屏），因为渲染树是依赖CSSOM才能生成，进而走浏览器的布局渲染流程，所以我们才有了CSS放在head的最佳实践。")]),s._v(" "),a("h3",{attrs:{id:"渲染树-render-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染树-render-tree"}},[s._v("#")]),s._v(" 渲染树（render-tree）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808181004984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODQwNzYx,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("渲染树生成大概经过以下过程：")]),s._v(" "),a("p",[s._v("从DOM根节点根节点开始遍历每个在HTML和CSS意义上的可见节点。\n对于每个可见节点，为其找到适配的CSSOM并且组合他们\n将每个节点（包括内容和样式）组建成render-tree\n可见节点：渲染树包含了渲染网页所需的所有节点，不需要渲染的节点是不会合并到渲染树中的，比如元数据元素meta，base等，还有设置了display:none的节点。")]),s._v(" "),a("h3",{attrs:{id:"布局-layout-计算渲染树节点大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局-layout-计算渲染树节点大小"}},[s._v("#")]),s._v(" 布局（layout）–计算渲染树节点大小")]),s._v(" "),a("p",[s._v("布局的最终结果是一个“盒模型”，它需要精确的计算出每个元素所占据的位置坐标，将如rem、vw、em等相对测量值（计算值）转换为屏幕上的绝对像素。")]),s._v(" "),a("p",[s._v("将相对转换为绝对，这就需要首先明确或定义好相对的一个标准，是相对谁的相对值，如rem是相对根元素的font-size值，vw是相对视口的width等。")]),s._v(" "),a("p",[s._v("简单介绍涉及到的viewport和html的font-size值")]),s._v(" "),a("p",[s._v("device-width为浏览器的理想视口\n在移动端，如果不设置viewport宽度为理想视口，viewport宽度通常为980px，这会导致文字很小，我们需要手动放大阅读。")]),s._v(" "),a("p",[s._v("rem是 font size of the root element，简单一点可以设置html的字体大小为固定值（一般默认为16px），则width直接使用5rem(换算为80px)，也可以使用js根据viewport大小动态设置rem大小。")]),s._v(" "),a("p",[s._v("同时也要注意，我们经常会在js或者是一些media query的设置不同断电，总之如果CSS元素的位置或大小等影响布局的因素发生变化，这是可能会触发回流，进行重新布局和渲染，这是我们在开发过程中要尽量避免和减小性能损耗的。")]),s._v(" "),a("h3",{attrs:{id:"绘制-paint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制-paint"}},[s._v("#")]),s._v(" 绘制（paint）")]),s._v(" "),a("p",[s._v("根据background, border, box-shadow等样式和HTML内容，将Layout生成的区域填充为最终将显示在屏幕上的像素。")]),s._v(" "),a("h2",{attrs:{id:"html-解析过程与-domcontentloaded-触发时机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-解析过程与-domcontentloaded-触发时机"}},[s._v("#")]),s._v(" HTML 解析过程与 DOMContentLoaded 触发时机")]),s._v(" "),a("p",[s._v("DOMContentLoaded 意思就是：当初始的 HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发，而无需等待样式表、图像和子框架的完成加载。")]),s._v(" "),a("p",[s._v("load 意思就是：当一个资源及其依赖资源已完成加载时，将触发 load 事件。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在既没有 CSS 也没有 JS 的情况下，HTML 文档的解析过程为：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/12909466-75f6429c83e88201.jpg",alt:"img"}})]),s._v(" "),a("p",[s._v("DOMContentLoaded 事件的触发时机为：HTML 解析为 DOM 之后。")])]),s._v(" "),a("li",[a("p",[s._v("有 CSS 无 JS 的情况下，HTML 文档解析过程为：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/12909466-c0f8194be9374ecd.jpg",alt:"img"}})]),s._v(" "),a("p",[s._v("这里与 1. 不同的地方在于，渲染树的生成是基于 DOM 和 CSSOM 的。但是触发 DOMContentLoaded 的时间依然是在 HTML 解析为 DOM 后，无论此时 CSS 解析为 CSSOM 的过程是否完成。")])]),s._v(" "),a("li",[a("p",[s._v("当有 JS 时，HTML 文档解析过程为")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/12909466-e58d21e1e3527cb0.jpg",alt:"img"}})])])]),s._v(" "),a("h2",{attrs:{id:"关键渲染路径优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键渲染路径优化"}},[s._v("#")]),s._v(" 关键渲染路径优化")]),s._v(" "),a("p",[s._v("优化关键渲染路径是指优先显示与当前用户操作有关的内容。")]),s._v(" "),a("p",[s._v("当前快速的网络体验，无数先贤在无数次尝试中不断改进才有了现代浏览器比较流畅的体验，这其中硬件软件支持不计其数，对web开发者来说，可以将浏览器看做一个黑盒，根据浏览器开发人员的API文档即可创建完整的应用程序，但追求极致的用户体验需要充分了解浏览器的运行机制和加速利器。")]),s._v(" "),a("h3",{attrs:{id:"css阻塞渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css阻塞渲染"}},[s._v("#")]),s._v(" CSS阻塞渲染")]),s._v(" "),a("p",[s._v("CSSOM形成前，"),a("strong",[s._v("浏览器不会渲染任何已处理内容")]),s._v("，所以CSS被视为阻塞渲染的资源。")]),s._v(" "),a("p",[s._v("解决CSS阻塞的问题有几个维度：")]),s._v(" "),a("ol",[a("li",[s._v("网速；")]),s._v(" "),a("li",[s._v("大小；")]),s._v(" "),a("li",[s._v("尽早并行下载；")]),s._v(" "),a("li",[s._v("尽早开始构建CSSOM；")]),s._v(" "),a("li",[s._v("构建CSSOM的速度")])]),s._v(" "),a("p",[s._v("所以有如下几点优化：")]),s._v(" "),a("p",[s._v("1、媒体查询\n进入移动互联网时代有一段时间了，前端的使用场景可谓是处处开花，CSS的使用场景也越来越多样化，所以适配多端的代码必不可少，虽然媒体查询也下载全部CSS代码，但是只会解析符合媒体查询条件的代码，这就做到了尽量少的阻塞渲染。")]),s._v(" "),a("p",[s._v("2、preload")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<link rel="preload" href="index_print.css" as="style" οnlοad="this.rel=\'stylesheet\'">\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("preload是resoure  hint规范中定义的一个功能，顾名思义预加载，将rel改为preload后，相当于加了一个标志位，浏览器解析的时候会提前建立连接或加载资源，做到尽早并行下载，然后在onload事件响应后将link的rel属性改为stylesheet即可进行解析。")]),s._v(" "),a("p",[s._v("3、动态添加link：js动态添加DOM元素link，不会阻塞渲染。")]),s._v(" "),a("p",[s._v("4、代码简练，不使用CSS计算，避免使用通配、高级选择器。")]),s._v(" "),a("blockquote",[a("p",[s._v("四点注意事项：")]),s._v(" "),a("ol",[a("li",[s._v("将CSS放在head")]),s._v(" "),a("li",[s._v("避免使用CSS import")]),s._v(" "),a("li",[s._v("适度内联CSS，衡量其他因素，若外联网络来回影响多大，HTML大小，CSS大小")]),s._v(" "),a("li",[s._v("全面考虑渲染情况，网速差、问价下载失败等，防止白屏时间太长。")])]),s._v(" "),a("p",[s._v("讨论一下IE chrome firefox三者的差异：")]),s._v(" "),a("ol",[a("li",[s._v("IE 只要看到HTML 标签就会进行绘制")]),s._v(" "),a("li",[s._v("chrome 不管css放在前面还是后面，都要等到CSSOM构建形成后才会绘制到页面上")]),s._v(" "),a("li",[s._v("firefox 放在head则会阻塞绘制，放在body末尾会先绘制前面的标签")])])]),s._v(" "),a("h3",{attrs:{id:"javascript阻塞渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript阻塞渲染"}},[s._v("#")]),s._v(" JavaScript阻塞渲染")]),s._v(" "),a("p",[s._v("长久以来script标签的最佳实践是放在"),a("code",[s._v("</body>")]),s._v("的前面，全是JavaScript功能太强大的锅。")]),s._v(" "),a("p",[s._v("JavaScript赋予我们操作页面交互、界面呈现、请求资源等一系列权限，几乎能让我们对网页的每一个行为进行操作，而且随着硬件设备的强大、网络的进一步提升和用户的需求不断提高，未来web的权限、功能、可操作性、交互、体验会越来越强。")]),s._v(" "),a("p",[s._v("扯远了，由于js可能会操作DOM和CSSOM，为了减少不必要的冲突和低效，浏览器都会做最坏的打算（js会操作DOM和CSSOM），所以正常情况下脚本执行会阻塞DOM构建，等待CSSOM的构建完毕再执行。")]),s._v(" "),a("ol",[a("li",[s._v("在HTML解析器解析到script标签后，会停止DOM构建，将控制权移交给javascript引擎，当js执行完毕后，浏览器会继续DOM构建。")]),s._v(" "),a("li",[s._v("javascript可能会操作CSSOM，所以如果浏览器未先将CSSOM构建完毕，那么js将会暂停执行，同时DOM构建也会暂停。")])]),s._v(" "),a("blockquote",[a("p",[s._v("小结一下：")]),s._v(" "),a("ul",[a("li",[s._v("脚本在文档中的位置很重要，因为其跟另外两者有很强的依赖关系")]),s._v(" "),a("li",[s._v("在HTML解析器解析到script标签后，会停止DOM构建")]),s._v(" "),a("li",[s._v("javascript可以操作DOM和CSSOM，但进行这些行为时要确保相应DOM和CSSOM已经存在")]),s._v(" "),a("li",[s._v("JavaScript 执行将暂停，直至 CSSOM 就绪")])])]),s._v(" "),a("p",[s._v("所以总体来说，javascript在DOM、CSSOM和javascript之间加入了大量依赖关系，根本目的是为了有序高效渲染页面。若我们想要达到此根本目的，则需要明确依赖关系，其实可以类比模块化的思想处理这些关系。")]),s._v(" "),a("p",[s._v("优化方法也就是处理依赖关系的方法：")]),s._v(" "),a("ol",[a("li",[s._v("脚本放在body底部")]),s._v(" "),a("li",[s._v("defer")]),s._v(" "),a("li",[s._v("async")]),s._v(" "),a("li",[s._v("避免运行长时间的JavaScript，若初始化必须则考虑适当分割或ssr等措施")])]),s._v(" "),a("blockquote",[a("p",[s._v("“优化关键渲染路径”在很大程度上是指了解和优化 HTML、CSS 和 JavaScript 之间的依赖关系谱。")])]),s._v(" "),a("h3",{attrs:{id:"font阻塞渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#font阻塞渲染"}},[s._v("#")]),s._v(" font阻塞渲染")]),s._v(" "),a("p",[s._v("浏览器为了避免FOUT(Flash Of Unstyled Text)，会尽量等待字体加载完成后，再显示应用了该字体的内容。")]),s._v(" "),a("p",[s._v("只有当字体超过一段时间仍未加载成功时，浏览器才会降级使用系统字体。每个浏览器都规定了自己的超时时间。")]),s._v(" "),a("p",[s._v("但这也带来了FOIT(Flash Of Invisible Text)问题。内容无法尽快地被展示，导致空白。")]),s._v(" "),a("p",[s._v("资源的相互依赖是比较复杂的，首先要明确资源加载、解析的依赖关系，然后利用异步等方式将非关键资源阻塞，优化关键路径资源。")]),s._v(" "),a("h3",{attrs:{id:"关键资源路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键资源路径"}},[s._v("#")]),s._v(" 关键资源路径")]),s._v(" "),a("p",[s._v("三大指标目标：")]),s._v(" "),a("ol",[a("li",[s._v("关键资源大小 — 优化请求时间 解析渲染时间")]),s._v(" "),a("li",[s._v("网络请求来回数目 — 优化请求时间")]),s._v(" "),a("li",[s._v("关键资源数目 — 优化解析渲染时间")])]),s._v(" "),a("p",[s._v("prefetch 利用缓存")]),s._v(" "),a("p",[s._v("减少资源大小：")]),s._v(" "),a("ol",[a("li",[s._v("避免返回无用内容")]),s._v(" "),a("li",[s._v("针对特定语言的源码压缩")]),s._v(" "),a("li",[s._v("通用文本压缩")]),s._v(" "),a("li",[s._v("图片压缩")])]),s._v(" "),a("p",[s._v("减少请求来回时间：")]),s._v(" "),a("ol",[a("li",[s._v("服务器优化：\n"),a("ol",[a("li",[s._v("chunked encoding")]),s._v(" "),a("li",[s._v("尽早返回数据")]),s._v(" "),a("li",[s._v("服务端渲染")])])]),s._v(" "),a("li",[s._v("合理利用缓存\n"),a("ol",[a("li",[s._v("CacheControl")]),s._v(" "),a("li",[s._v("ETag")]),s._v(" "),a("li",[s._v("localstorage")]),s._v(" "),a("li",[s._v("service worker")])])]),s._v(" "),a("li",[s._v("优化网络\n"),a("ol",[a("li",[s._v("HTTP 2")]),s._v(" "),a("li",[s._v("CDN")]),s._v(" "),a("li",[s._v("域名分割")]),s._v(" "),a("li",[s._v("减少重定向")]),s._v(" "),a("li",[s._v("resource-hint")])])])]),s._v(" "),a("p",[s._v("总结一下关键渲染路径优化的一般步骤：")]),s._v(" "),a("ol",[a("li",[s._v("分析关键渲染路径中的资源大小、来回、渲染顺序")]),s._v(" "),a("li",[s._v("最大限度删减关键资源数目，也就是尽量只渲染首屏必须资源，其他的异步或延迟（async defer ssr ajax）")]),s._v(" "),a("li",[s._v("合并请求数目，减少请求往返次数，减少资源字节数（内联js、 css）")]),s._v(" "),a("li",[s._v("优化加载渲染顺序，最大化利用浏览器渲染引擎和js引擎。（调整资源DOM顺序）")])]),s._v(" "),a("h2",{attrs:{id:"html文档的加载与页面的首次渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html文档的加载与页面的首次渲染"}},[s._v("#")]),s._v(" HTML文档的加载与页面的首次渲染")]),s._v(" "),a("p",[s._v("1、浏览器首先下载该地址所对应的 html 页面。")]),s._v(" "),a("p",[s._v("2、浏览器解析 html 页面的 DOM 结构。")]),s._v(" "),a("p",[s._v("3、开启下载线程对文档中的所有资源按优先级排序下载。")]),s._v(" "),a("p",[s._v("4、主线程继续解析文档，到达 head 节点 ，head 里的外部资源是外链样式表和外链 js。")]),s._v(" "),a("p",[s._v("​\t 发现有外链 css 或者外链 js，如果是外链 js ，则停止解析后续内容，等待该资源下载，下载完后立刻执行。如果是外链 css，继续解析后续内容。")]),s._v(" "),a("p",[s._v("5、解析到 body")]),s._v(" "),a("p",[s._v("body 里的情况比较多，body 里可能只有 DOM 元素，可能既有 DOM、也有 css、js 等资源，js 资源又有可能异步加载图片、css、js 等。DOM 结构不同，浏览器的解析机制也不同，所以需要分开来讨论。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("只有 DOM 元素：")]),s._v(" "),a("p",[s._v("这种情况比较简单了，DOM 树构建完，页面首次渲染。")])]),s._v(" "),a("li",[a("p",[s._v("有 DOM 元素、外链 js：")]),s._v(" "),a("p",[s._v("当解析到外链 js 的时候，该 js 尚未下载到本地，则 js 之前的 DOM 会被渲染到页面上，同时 js 会阻止后面 DOM  的构建，即后面的 DOM 节点并不会添加到文档的 DOM 树中。所以，js 执行完之前，我们在页面上看不到该 js 后面的 DOM 元素。")])]),s._v(" "),a("li",[a("p",[s._v("有 DOM 元素、外链 css")]),s._v(" "),a("p",[s._v("外链 css 不会影响 css 后面的 DOM 构建，但是会阻碍渲染。简单点说，外链 css 加载完之前，页面还是白屏。")])]),s._v(" "),a("li",[a("p",[s._v("有 DOM 元素、外链 js、外链 css")]),s._v(" "),a("ul",[a("li",[s._v("外链 js 和外链 css 的顺序会影响页面渲染，这点尤为重要。当 body 中 js 之前的外链 css 未加载完之前，页面是不会被渲染的。")]),s._v(" "),a("li",[s._v("当body中 js 之前的 外链 css 加载完之后，js 之前的 DOM 树和 css 合并渲染树，页面渲染出该 js 之前的 DOM 结构。")])])])]),s._v(" "),a("p",[s._v("6、文档解析完毕，页面重新渲染。当页面引用的所有 js 同步代码执行完毕，触发 DOMContentLoaded 事件。")]),s._v(" "),a("p",[s._v("7、html 文档中的图片资源，js 代码中有异步加载的 css、js 、图片资源都加载完毕之后，load 事件触发。")]),s._v(" "),a("h3",{attrs:{id:"domcontentloaded-事件的触发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloaded-事件的触发"}},[s._v("#")]),s._v(" DomContentLoaded 事件的触发")]),s._v(" "),a("p",[s._v("DOMContentLoaded 事件在 html文档加载完毕，并且 html 所引用的内联 js、以及外链 js 的同步代码都执行完毕后触发。")]),s._v(" "),a("h3",{attrs:{id:"load-事件的触发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#load-事件的触发"}},[s._v("#")]),s._v(" load 事件的触发")]),s._v(" "),a("p",[s._v("当页面 DOM 结构中的 js、css、图片，以及 js 异步加载的 js、css 、图片都加载完成之后，才会触发 load 事件。")]),s._v(" "),a("h2",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),a("ol",[a("li",[s._v("代码层面：避免使用css表达式，避免使用高级选择器，通配选择器等。")]),s._v(" "),a("li",[s._v("缓存利用：缓存Ajax，使用CDN，使用外部js和css文件以便缓存，添加Expires头，服务端配置Etag，减少DNS查找等。")]),s._v(" "),a("li",[s._v("请求数量：合并样式和脚本，使用css图片精灵，初始首屏之外的图片资源按需加载，静态资源延迟加载。")]),s._v(" "),a("li",[s._v("请求带宽：压缩文件，开启GZIP，")])]),s._v(" "),a("h3",{attrs:{id:"代码层面的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码层面的优化"}},[s._v("#")]),s._v(" 代码层面的优化")]),s._v(" "),a("ul",[a("li",[s._v("用hash-table来优化查找")]),s._v(" "),a("li",[s._v("少用全局变量")]),s._v(" "),a("li",[s._v("用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能")]),s._v(" "),a("li",[s._v("用setTimeout来避免页面失去响应")]),s._v(" "),a("li",[s._v("缓存DOM节点查找的结果")]),s._v(" "),a("li",[s._v("避免使用CSS Expression")]),s._v(" "),a("li",[s._v("避免全局查询")]),s._v(" "),a("li",[s._v("避免使用with(with会创建自己的作用域，会增加作用域链长度)")]),s._v(" "),a("li",[s._v("多个变量声明合并")]),s._v(" "),a("li",[s._v("避免图片和iFrame等的空Src。空Src会重新加载当前页面，影响速度和效率")]),s._v(" "),a("li",[s._v("尽量避免写在HTML标签中写Style属性")])]),s._v(" "),a("p",[s._v("移动端性能优化")]),s._v(" "),a("ul",[a("li",[s._v("尽量使用css3动画，开启硬件加速。")]),s._v(" "),a("li",[s._v("适当使用touch事件代替click事件。")]),s._v(" "),a("li",[s._v("避免使用css3渐变阴影效果。")]),s._v(" "),a("li",[s._v("可以用transform: translateZ(0)来开启硬件加速。")]),s._v(" "),a("li",[s._v("不滥用Float。Float在渲染时计算量比较大，尽量减少使用")]),s._v(" "),a("li",[s._v("不滥用Web字体。Web字体需要下载，解析，重绘当前页面，尽量减少使用。")]),s._v(" "),a("li",[s._v("合理使用requestAnimationFrame动画代替setTimeout")]),s._v(" "),a("li",[s._v("CSS中的属性（CSS3 transitions、CSS3 3D transforms、Opacity、Canvas、WebGL、Video）会触发GPU渲染，请合理使用。过渡使用会引发手机过耗电增加")]),s._v(" "),a("li",[s._v("PC端的在移动端同样适用")])]),s._v(" "),a("h3",{attrs:{id:"什么是etag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是etag"}},[s._v("#")]),s._v(" 什么是Etag？")]),s._v(" "),a("p",[s._v("当发送一个服务器请求时，浏览器首先会进行缓存过期判断。浏览器根据缓存过期时间判断缓存文件是否过期。")]),s._v(" "),a("ul",[a("li",[s._v("情景一：若没有过期，则不向服务器发送请求，直接使用缓存中的结果，此时我们在浏览器控制台中可以看到 200 OK(from cache) ，此时的情况就是完全使用缓存，浏览器和服务器没有任何交互的。")]),s._v(" "),a("li",[s._v("情景二：若已过期，则向服务器发送请求，此时请求中会带上①中设置的文件修改时间，和Etag\n然后，进行资源更新判断。服务器根据浏览器传过来的文件修改时间，判断自浏览器上一次请求之后，文件是不是没有被修改过；根据Etag，判断文件内容自上一次请求之后，有没有发生变化")]),s._v(" "),a("li",[s._v("情形一：若两种判断的结论都是文件没有被修改过，则服务器就不给浏览器发index.html的内容了，直接告诉它，文件没有被修改过，你用你那边的缓存吧—— 304 Not  Modified，此时浏览器就会从本地缓存中获取index.html的内容。此时的情况叫协议缓存，浏览器和服务器之间有一次请求交互。")]),s._v(" "),a("li",[s._v("情形二：若修改时间和文件内容判断有任意一个没有通过，则服务器会受理此次请求，之后的操作同①\n① 只有get请求会被缓存，post请求不会")])]),s._v(" "),a("h6",{attrs:{id:"etag应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etag应用"}},[s._v("#")]),s._v(" ETag应用:")]),s._v(" "),a("p",[s._v("Etag由服务器端生成，客户端通过If-Match或者说If-None-Match这个条件判断请求来验证资源是否修改。常见的是使用If-None-Match。请求一个文件的流程可能如下：\n第一次请求")]),s._v(" "),a("ol",[a("li",[s._v("客户端发起 HTTP GET 请求一个文件；")]),s._v(" "),a("li",[s._v("服务器处理请求，返回文件内容和一堆Header，当然包括Etag(例如”2e681a-6-5d044840”)(假设服务器支持Etag生成和已经开启了Etag).状态码200")])]),s._v(" "),a("p",[s._v("==第二次请求=\n客户端发起 HTTP GET  请求一个文件，注意这个时候客户端同时发送一个If-None-Match头，这个头的内容就是第一次请求时服务器返回的Etag：2e681a-6-5d0448402.服务器判断发送过来的Etag和计算出来的Etag匹配，因此If-None-Match为False，不返回200，返回304，客户端继续使用本地缓存；流程很简单，问题是，如果服务器又设置了Cache-Control:max-age和Expires呢，怎么办")]),s._v(" "),a("p",[s._v("答案是同时使用，也就是说在完全匹配If-Modified-Since和If-None-Match即检查完修改时间和Etag之后，服务器才能返回304.(不要陷入到底使用谁的问题怪圈)\n为什么使用Etag请求头?\nEtag 主要为了解决 Last-Modified 无法解决的一些问题。")]),s._v(" "),a("h6",{attrs:{id:"expires和cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires和cache-control"}},[s._v("#")]),s._v(" Expires和Cache-Control")]),s._v(" "),a("p",[s._v("Expires要求客户端和服务端的时钟严格同步。HTTP1.1引入Cache-Control来克服Expires头的限制。如果max-age和Expires同时出现，则max-age有更高的优先级。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Cache-Control: no-cache, private, max-age=0\nETag: abcde\nExpires: Thu, 15 Apr 2014 20:00:00 GMT\nPragma: private\nLast-Modified: $now // RFC1123 format\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("总结：")]),s._v(" "),a("p",[s._v("总体遵循着从下往上的大原则，细节上尽量并行下载，不阻塞主线程。具体来说，其实整个DOM是主线，所以遵循尽量快、并行解析DOM，尽快触发load事件，只要并行的两者不会相互影响就好，如DOM和CSSOM。")]),s._v(" "),a("p",[s._v("在尽量不进行重复操作的前提下，尽量优先渲染关键路径，同时尽量加载非关键路径资源，尽量保证不被网速或者说未下载资源阻塞渲染。")]),s._v(" "),a("p",[s._v("浏览器或者说厂商的最终目跟开发者一样，都是为了用户体验，总体来说浏览器实现甚至包括规范都是遵循用户>开发者的原则。")])]),s._v(" "),a("h2",{attrs:{id:"浏览器兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性"}},[s._v("#")]),s._v(" 浏览器兼容性")]),s._v(" "),a("p",[s._v("浏览器兼容性问题，往往是个别浏览器对一些标准定义不一致导致的。")]),s._v(" "),a("p",[s._v("常用的浏览器及对应内核如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("浏览器")]),s._v(" "),a("th",[s._v("内核")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("IE")]),s._v(" "),a("td",[s._v("Trident")])]),s._v(" "),a("tr",[a("td",[s._v("Firefox")]),s._v(" "),a("td",[s._v("Gecko")])]),s._v(" "),a("tr",[a("td",[s._v("chrome")]),s._v(" "),a("td",[s._v("先为webkit，后为blink（与opear共同开发）")])]),s._v(" "),a("tr",[a("td",[s._v("Safari")]),s._v(" "),a("td",[s._v("webkit")])]),s._v(" "),a("tr",[a("td",[s._v("Opera")]),s._v(" "),a("td",[s._v("blink")])]),s._v(" "),a("tr",[a("td",[s._v("360")]),s._v(" "),a("td",[s._v("IE+Chrome双内核")])]),s._v(" "),a("tr",[a("td"),s._v(" "),a("td")])])]),s._v(" "),a("h3",{attrs:{id:"css兼容性问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css兼容性问题"}},[s._v("#")]),s._v(" CSS兼容性问题")]),s._v(" "),a("p",[s._v("浏览器兼容性导致的问题：")]),s._v(" "),a("p",[s._v("1.不同浏览器对解析标签默认的内边距和外边距不同\n解决方式："),a("code",[s._v("*{ margin: 0; padding: 0;}")])]),s._v(" "),a("p",[s._v("2.IE6双边距问题；在 IE6中设置了float , 同时又设置margin , 就会出现边距问题\n解决方式："),a("code",[s._v("display:inline;")])]),s._v(" "),a("p",[s._v("3.当标签的高度设置小于10px，在IE6、IE7中会超出自己设置的高度\n解决方案：超出高度的标签设置"),a("code",[s._v("overflow:hidden")]),s._v(",或者设置"),a("code",[s._v("line-height的")]),s._v("值小于你的设置高度")]),s._v(" "),a("p",[s._v("4.图片默认有间距\n解决方案：使用float 为img 布局")]),s._v(" "),a("p",[s._v("5.IE9以下浏览器不能使用opacity\n解决方法："),a("code",[s._v("opacity: 0.5; filter: alpha(opacity = 50); -ms-filter: “progid:DXImageTransform.Microsoft.Alpha(opacity = 80)”;")])]),s._v(" "),a("p",[s._v("6.透明度兼容CSS设置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".transparent_class {  \n      filter:alpha(opacity=50);  \n      -moz-opacity:0.5;  \n      -khtml-opacity: 0.5;  \n      opacity: 0.5;  \n}   \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("7.标签最低高度设置min-height不兼容\n解决方法："),a("code",[s._v("{min-height:200px; height:auto !important; height:200px; overflow:visible;}")])]),s._v(" "),a("p",[s._v("8.cursor：hand显示手型在safari上不支持\n解决方案：统一使用 "),a("code",[s._v("cursor:pointer")]),s._v("\n9.解决 ie9 以下浏览器对 html5 新增标签不识别的问题。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\x3c!--[if lt IE 9]>\n  <script type="text/javascript" src="https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js"><\/script>\n<![endif]--\x3e\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("10.解决 ie9 以下浏览器不支持 CSS3 Media Query 的问题。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script src="https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js"><\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("11.边距重叠问题；当相邻两个元素都设置了margin边距时，margin将取最大值，舍弃最小值；")]),s._v(" "),a("p",[s._v("12.两个块级元素，父元素设置了overflow：auto；子元素设置了position：relative；且高度大于父元素，在IE6、IE7会被隐藏而不是溢出；")]),s._v(" "),a("p",[s._v("解决方案：父级元素设置position：relative")]),s._v(" "),a("p",[s._v("13.const问题")]),s._v(" "),a("p",[s._v("说明：Firefox下，可以使用const关键字来定义常量；IE下，只能使用var关键字来定义常量。\n解决方法：统一使用var关键字来定义常量。")]),s._v(" "),a("p",[s._v("14.event.srcElement问题")]),s._v(" "),a("p",[s._v("问题说明：IE下，event对象有srcElement属性，但是没有target属性；Firefox下，event对象有target属性，但是没有srcElement属性。\n解决方法：使用srcObj = event.srcElement?event.srcElement:event.target;")]),s._v(" "),a("p",[s._v("15.事件绑定")]),s._v(" "),a("p",[s._v("IE:dom.attachEvent();\n其他浏览器：dom.addEventListener();\n标准浏览器采用事件捕获的方式对应IE的事件冒泡机制（即标准由最外元素至最内元素或者IE由最内元素到最外元素）最后标准方亦觉得IE这方面的比较合理，所以便将事件冒泡纳入了标准，这也是addEventListener第三个参数的由来，而且事件冒泡作为了默认值。")]),s._v(" "),a("p",[s._v("16.操作tr的html")]),s._v(" "),a("p",[s._v("在ie9以下，不能操作tr的innerHTML")]),s._v(" "),a("p",[s._v("17.ajax略有不同")]),s._v(" "),a("p",[s._v("IE：ActiveXObject\n其他：xmlHttpReuest")]),s._v(" "),a("p",[s._v("18.对象宽高赋值问题")]),s._v(" "),a("p",[s._v("问题说明：FireFox中类似obj.style.height = imgObj.height的语句无效。")]),s._v(" "),a("p",[a("strong",[s._v("IE 条件注释")]),s._v("\nIE 的条件注释仅仅针对IE浏览器，对其他浏览器无效")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("操作符")]),s._v(" "),a("th",[s._v("含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("lt")]),s._v(" "),a("td",[s._v("小于")])]),s._v(" "),a("tr",[a("td",[s._v("gt")]),s._v(" "),a("td",[s._v("大于")])]),s._v(" "),a("tr",[a("td",[s._v("lte")]),s._v(" "),a("td",[s._v("小于等于")])]),s._v(" "),a("tr",[a("td",[s._v("gte")]),s._v(" "),a("td",[s._v("不小于")])]),s._v(" "),a("tr",[a("td",[s._v("!")]),s._v(" "),a("td",[s._v("不等于")])])])]),s._v(" "),a("p",[a("strong",[s._v("IE 属性过滤器（较为常用的hack方法）")]),s._v("\n针对不同的 IE 浏览器，可以使用不同的字符来对特定的版本的 IE 浏览器进行样式控制")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("字符")]),s._v(" "),a("th",[s._v("例子")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("_")]),s._v(" "),a("td",[s._v("_height：100px；")]),s._v(" "),a("td",[s._v("IE6可以识别")])]),s._v(" "),a("tr",[a("td",[s._v("* 、+ 、!")]),s._v(" "),a("td",[s._v("*height：100px;")]),s._v(" "),a("td",[s._v("IE6 / IE7可以识别")])]),s._v(" "),a("tr",[a("td",[s._v("\\0/")]),s._v(" "),a("td",[s._v("height：100px\\0/;")]),s._v(" "),a("td",[s._v("IE8可以识别")])]),s._v(" "),a("tr",[a("td",[s._v("\\9")]),s._v(" "),a("td",[s._v("height：100px\\9;")]),s._v(" "),a("td",[s._v("IE6、7、8、9、10可以识别")])])])]),s._v(" "),a("p",[a("strong",[s._v("浏览器CSS兼容前缀")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("-o-transform: rotate(7deg);        // Opera\n-ms-transform: rotate(7deg);       // IE\n-moz-transform: rotate(7deg);      // Firefox\n-webkit-transform: rotate(7deg);   // Chrome\ntransform: rotate(7deg);           // 统一标识语句\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"js部分的兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js部分的兼容性"}},[s._v("#")]),s._v(" JS部分的兼容性")]),s._v(" "),a("p",[s._v("浏览器宽高问题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//以下均可console.log()实验\n  var winW=document.body.clientWidth||document.docuemntElement.clientWidth;//网页可见区域宽\n  var winH=document.body.clientHeight||document.docuemntElement.clientHeight;//网页可见区域宽\n  //以上为不包括边框的宽高，如果是offsetWidth或者offsetHeight的话包括边框\n   \n  var winWW=document.body.scrollWidth||document.docuemntElement.scrollWidth;//整个网页的宽\n  var winHH=document.body.scrollHeight||document.docuemntElement.scrollHeight;//整个网页的高\n \n  var scrollHeight=document.body.scrollTop||document.docuemntElement.scrollTop;//网页被卷去的高\n  var scrollLeft=document.body.scrollLeft||document.docuemntElement.scrollLeft;//网页左卷的距离\n \n  var screenH=window.screen.height;//屏幕分辨率的高\n  var screenW=window.screen.width;//屏幕分辨率的宽\n  var screenX=window.screenLeft;//浏览器窗口相对于屏幕的x坐标（除了FireFox）\n  var screenXX=window.screenX;//FireFox相对于屏幕的X坐标\n  var screenY=window.screenTop;//浏览器窗口相对于屏幕的y坐标（除了FireFox）\n  var screenYY=window.screenY;//FireFox相对于屏幕的y坐标\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("事件event获取源")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//event事件问题\n  document.onclick=function(ev){//谷歌火狐的写法，IE9以上支持，往下不支持；\n    var e=ev;\n    console.log(e);\n  }\n  document.onclick=function(){//谷歌和IE支持，火狐不支持；\n    var e=event;\n    console.log(e);\n  }\n  document.onclick=function(ev){//兼容写法；\n    var e=ev||window.event;\n    var mouseX=e.clientX;//鼠标X轴的坐标\n    var mouseY=e.clientY;//鼠标Y轴的坐标\n  }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("DOM节点获取")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//DOM节点相关，主要兼容IE 6 7 8\n  function nextnode(obj){//获取下一个兄弟节点\n    if (obj.nextElementSibling) {\n      return obj.nextElementSibling;\n    } else{\n      return obj.nextSibling;\n    };\n  }\n  function prenode(obj){//获取上一个兄弟节点\n    if (obj.previousElementSibling) {\n      return obj.previousElementSibling;\n    } else{\n      return obj.previousSibling;\n    };\n  }\n  function firstnode(obj){//获取第一个子节点\n    if (obj.firstElementChild) {\n      return obj.firstElementChild;//非IE678支持\n    } else{\n      return obj.firstChild;//IE678支持\n    };\n  }\n  function lastnode(obj){//获取最后一个子节点\n    if (obj.lastElementChild) {\n      return obj.lastElementChild;//非IE678支持\n    } else{\n      return obj.lastChild;//IE678支持\n    };\n  }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[s._v("获取ClassName问题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//通过类名获取元素\n  document.getElementsByClassName('');//IE 6 7 8不支持；\n \n  //这里可以定义一个函数来解决兼容问题，当然别在这给我提jQuery...\n  //第一个为全局获取类名，第二个为局部获取类名\n  function byClass1(oClass){//全局获取，oClass为你想要查找的类名，没有“.”\n    var tags=document.all?document.all:document.getElementsByTagName('*');\n    var arr=[];\n    for (var i = 0; i < tags.length; i++) {\n      var reg=new RegExp('\\\\b'+oClass+'\\\\b','g');\n      if (reg.test(tags[i].className)) {\n        arr.push(tags[i]);\n      };\n    };\n    return arr;//注意返回的也是数组，包含你传入的class所有元素；\n  }\n \n  function byClass2(parentID,oClass){//局部获取类名，parentID为你传入的父级ID\n    var parent=document.getElementById(parentID);\n    var tags=parent.all?parent.all:parent.getElementsByTagName('*');\n    var arr=[];\n    for (var i = 0; i < tags.length; i++) {\n    var reg=new RegExp('\\\\b'+oClass+'\\\\b','g');\n      if (reg.test(tags[i].className)) {\n        arr.push(tags[i]);\n      };\n    };\n    return arr;//注意返回的也是数组，包含你传入的class所有元素；\n   }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[s._v("获取元素的非行间样式值")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//获取元素的非行间样式值\n   function getStyle(object,oCss) {\n       if (object.currentStyle) {\n         return object.currentStyle[oCss];//IE\n       }else{\n         return getComputedStyle(object,null)[oCss];//除了IE\n       }\n   }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("设置监听事件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//设置监听事件\n   function addEvent(obj,type,fn){//添加事件监听，三个参数分别为 对象、事件类型、事件处理函数，默认为false\n    if (obj.addEventListener) {\n      obj.addEventListener(type,fn,false);//非IE\n    } else{\n      obj.attachEvent('on'+type,fn);//ie,这里已经加上on，传参的时候注意不要重复加了\n    };\n  }\n  function removeEvent(obj,type,fn){//删除事件监听\n    if (obj.removeEventListener) {\n      obj.removeEventListener(type,fn,false);//非IE\n    } else{\n      obj.detachEvent('on'+type,fn);//ie，这里已经加上on，传参的时候注意不要重复加了\n    };\n  }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("元素到浏览器边缘的距离")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//在这里加个元素到浏览器边缘的距离，很实用\n  function offsetTL(obj){//获取元素内容距离浏览器边框的距离（含边框）\n    var ofL=0,ofT=0;\n    while(obj){\n      ofL+=obj.offsetLeft+obj.clientLeft;\n      ofT+=obj.offsetTop+obj.clientTop;\n      obj=obj.offsetParent;\n    }\n    return{left:ofL,top:ofT};\n  }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("阻止事件传播")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//js阻止事件传播，这里使用click事件为例\n  document.onclick=function(e){\n    var e=e||window.event;\n    if (e.stopPropagation) {\n      e.stopPropagation();//W3C标准\n    }else{\n      e.cancelBubble=true;//IE....\n    }\n  }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("阻止默认事件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//js阻止默认事件\n  document.onclick=function(e){\n    var e=e||window.event;\n    if (e.preventDefault) {\n      e.preventDefault();//W3C标准\n    }else{\n      e.returnValue='false';//IE..\n    }\n  }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("event事件的target")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//关于event事件中的target\n  document.onmouseover=function(e){\n    var e=e||window.event;\n    var Target=e.target||e.srcElement;//获取target的兼容写法，后面的为IE\n    var from=e.relatedTarget||e.formElement;//鼠标来的地方，同样后面的为IE...\n    var to=e.relatedTarget||e.toElement;//鼠标去的地方\n  }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("鼠标滚轮滚动事件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//鼠标滚轮事件\n  //火狐中的滚轮事件\ndocument.addEventListener("DOMMouseScroll",function(event){\n    alert(event.detail);//若前滚的话为 -3，后滚的话为 3\n  },false)\n  //非火狐中的滚轮事件\n  document.onmousewheel=function(event){\n    alert(event.detail);//前滚：120，后滚：-120\n  }\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("节点加载")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//火狐下特有的节点加载事件，就是节点加载完才执行，和onload不同\n//感觉用到的不多，直接把js代码放在页面结构后面一样能实现。。\ndocument.addEventListener('DOMContentLoaded',function ( ){},false);//DOM加载完成。好像除IE6-8都可以.\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"三颗树-图示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三颗树-图示"}},[s._v("#")]),s._v(" 三颗树（图示）")]),s._v(" "),a("p",[s._v("如何理解HTML树（DOM）/ CSS树（CSSOM）/ Reader Tree（渲染树）三者的关系")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://pic4.zhimg.com/80/v2-65f3325c76fabc6a5b1e54a75af0adaf_720w.jpg",alt:"img"}})]),s._v(" "),a("p",[s._v("默认我们会把"),a("strong",[s._v("标签")]),s._v("当作"),a("strong",[s._v("节点")]),s._v("，"),a("strong",[s._v("节点与节点")]),s._v("之间相互连接，组成树枝、树干进而发展成树")]),s._v(" "),a("p",[s._v("HTML树（DOM）+CSS树（CSSOM）=  Reader Tree（渲染树）")]),s._v(" "),a("p",[s._v("通过Reader Tree（渲染树）我们可以确定浏览器的基本样式")]),s._v(" "),a("h2",{attrs:{id:"渲染主流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染主流程"}},[s._v("#")]),s._v(" "),a("strong",[s._v("渲染主流程")])]),s._v(" "),a("h3",{attrs:{id:"构建dom树-生成了dom树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建dom树-生成了dom树"}},[s._v("#")]),s._v(" "),a("strong",[s._v("构建DOM树（生成了DOM树）")])]),s._v(" "),a("p",[s._v("为什么要构建DOM树呢？这是因为浏览器无法直接理解和使用HTML，所以需要将HTML转换为浏览器能够理解的结构——DOM树。")]),s._v(" "),a("p",[a("strong",[s._v("它代表了页面的结构，决定了整个页面的初始格局，而下面的CSS对象模型（CSSOM）决定了页面的五彩斑斓。")])]),s._v(" "),a("h3",{attrs:{id:"样式计算-生成css-rule-tree-computedstyle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式计算-生成css-rule-tree-computedstyle"}},[s._v("#")]),s._v(" "),a("strong",[s._v("样式计算")]),s._v("**（生成CSS Rule Tree(ComputedStyle)）**")]),s._v(" "),a("p",[s._v("样式计算的目的是为了计算出DOM节点中每个元素的具体样式。")]),s._v(" "),a("p",[s._v("这个阶段可以分为3个步骤：（同样的读取CSS内容也是和DOM树过程类似，先将CSS字节转为字符，再转为token和节点，最后形成树结构）")]),s._v(" "),a("ol",[a("li",[a("h3",{attrs:{id:"把css转换为浏览器能够理解的结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把css转换为浏览器能够理解的结构"}},[s._v("#")]),s._v(" "),a("strong",[s._v("把CSS转换为浏览器能够理解的结构")])])]),s._v(" "),a("li",[a("h3",{attrs:{id:"转换样式表中的属性值-使其标准化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换样式表中的属性值-使其标准化"}},[s._v("#")]),s._v(" "),a("strong",[s._v("转换样式表中的属性值，使其标准化")])])]),s._v(" "),a("li",[a("h3",{attrs:{id:"计算dom树中每个节点的具体样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算dom树中每个节点的具体样式"}},[s._v("#")]),s._v(" "),a("strong",[s._v("计算DOM树中每个节点的具体样式")])])])]),s._v(" "),a("h3",{attrs:{id:"布局阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局阶段"}},[s._v("#")]),s._v(" "),a("strong",[s._v("布局阶段")])]),s._v(" "),a("p",[s._v("现在，我们有DOM树和DOM树中元素的样式，但这还不足以显示页面，因为我们还不知道DOM元素的几何位置信息。那么接下来就需要计算出DOM树中可见元素的几何位置，我们把这个计算过程叫做布局。")]),s._v(" "),a("p",[a("strong",[s._v("1）创建布局树（在这一步生成了渲染树）")])]),s._v(" "),a("p",[a("strong",[s._v("2）布局计算（回流/重排发生在此处）")])]),s._v(" "),a("h3",{attrs:{id:"分层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分层"}},[s._v("#")]),s._v(" "),a("strong",[s._v("分层")])]),s._v(" "),a("h3",{attrs:{id:"图层绘制-重绘发生在此处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图层绘制-重绘发生在此处"}},[s._v("#")]),s._v(" "),a("strong",[s._v("图层绘制（重绘发生在此处）")])]),s._v(" "),a("h3",{attrs:{id:"栅格化操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栅格化操作"}},[s._v("#")]),s._v(" "),a("strong",[s._v("栅格化操作")])]),s._v(" "),a("h3",{attrs:{id:"合成和显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合成和显示"}},[s._v("#")]),s._v(" "),a("strong",[s._v("合成和显示")])]),s._v(" "),a("h2",{attrs:{id:"性能优化-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化-2"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),a("p",[s._v("CssTree的绘制是异步的，并发的，非阻塞的，而js是阻塞的，在dom树的构建过程中，如果碰到js文件，会先停止dom树的构建，转而执行js文件，因为js文件可能会涉及到dom元素的增删改查，会改变dom树与css树的结构，这也是为什么JS是单线程的原因，如果是多线程，一个线程要增加节点，而另一个线程要删除节点，会导致程序不知道如何执行，注意：这里的异步指的是下载异步，而不是执行异步，既然把js会修改Dom树的结构，阻塞Dom树的构建，那把js放到结束标签前面不就好了吗，等到dom树构建完了再加载js文件不就好了么，为什么还要异步加载JS呢？，因为如果要加载一些不处理页面的，比如一些工具包需要引入，加载这些工具方法没必要阻塞文档，过渡JS加载会影响页面效率，一旦网速不好，那么整个网站将等待JS加载而不进行后续渲染等工具，因此我们可以让一些工具方法按需加载，用到再加载，不用不加载。而这就需要用到异步加载js方法")]),s._v(" "),a("h3",{attrs:{id:"异步加载js的三种方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步加载js的三种方法"}},[s._v("#")]),s._v(" 异步加载JS的三种方法")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("defer异步加载")]),s._v("：需要等到dom文档全部解析完后才会被执行，并且只有IE能用，也可以将代码写到内部")]),s._v(" "),a("p",[s._v("只能在IE9 以下使用。不会阻断页面其他部分的加载，而是并行（同时）加载，但加载完后不会立马执行该代码。等到整个页面解析完成之后才执行。允许在Script标签里使用，也允许在引入的Script标签中使用，但不允许又引入文件又在Script标签里写代码")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("async异步加载")]),s._v("：加载完就执行，async只能加载外部脚本，不能把js写在script标签里。")]),s._v(" "),a("p",[s._v("W3C标准方法，支持IE9以及其他浏览器（chrome,firefox,safari,opera…）不会阻断页面其他部分的加载，而是并行（同时）加载，一旦加载完成后便立马执行，只允许在引入的script标签中使用。")]),s._v(" "),a("blockquote",[a("p",[s._v("但是，以上的两种方法都存在兼容性问题，不能完美支持所有浏览器，我们可能想到在一个script脚本中同时使用这两种方法，但这样会导致在IE9以上的浏览器会同时存在这两种方法，浏览器无法识别到底应该使用哪种方法，因此，我们需要一种更好的方法！")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("按需加载")]),s._v("：创建script，插入到dom中，加载完后执行回调callback.（最常用，最完美）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808125952670.png",alt:"按需加载"}})]),s._v(" "),a("p",[s._v("在这里首先先新建一个标签，然后设置标签的类型，再给这个标签添加一个src属性，并给src赋值，在这句话执行完后，系统就会自动开启一个线程异步下载src里面的东西，但是 下载完成后并不会立马执行demo.js这个文件"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808130550288.png",alt:"代码执行"}})]),s._v(" "),a("p",[s._v("而是等到对这个script标签被执行插入操作后才会执行里面的代码。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/201908081445079.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODQwNzYx,size_16,color_FFFFFF,t_70",alt:"封装按需加载函数"}})]),s._v(" "),a("p",[s._v("但是，这个还不够完善，还有问题，当我们的网速太快的时候，script.readystate瞬间变成了最终状态  complete状态，而onreadystatechange事件的触发依靠script.readystate状态的改变，onreadystatechange检测不到script.readystate状态的改变便永远不会执行，因此我们需要让script.readystate有一个状态的转化，怎么实现呢，把script.src放到下面即可")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808151307995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODQwNzYx,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("原因是调用该函数的时候该函数体才开始执行，刚开始执行还没有test的存在。\n有几种方法可以解决这个问题，一种是函数引用 function (){ test() };\n一种是eval()，不推荐使用\n最后一种可以与函数相配合实现")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190808165651603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5ODQwNzYx,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})])])]),s._v(" "),a("blockquote",[a("p",[s._v("defer 与async,两者有一些共通点")]),s._v(" "),a("ol",[a("li",[s._v("二者下载都不会阻塞DOM解析，这点还是很重要的，首屏时间就是一切")]),s._v(" "),a("li",[s._v("都是给外链脚本使用，不考虑请求数量而使用内联情况下等因素的首选方式")]),s._v(" "),a("li",[s._v("都可以使用onload事件进行一系列处理")])]),s._v(" "),a("p",[s._v("二者最主要的不同点就是async其实只注重异步下载时不阻塞html解析，下载完毕后会立刻执行，而defer会完全保证异步下载和执行都不会阻塞html解析，这点在不同场景使用还是比较重要的。")]),s._v(" "),a("p",[s._v("比如async就适合基本没DOM操作，不在乎依赖的模块，而且要尽可能小或者说执行时间短，否则对首屏可能还是影响很大的；defer相对而言就规矩的多了，按序加载，不会影响html解析。")])]),s._v(" "),a("h3",{attrs:{id:"如何更新样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何更新样式"}},[s._v("#")]),s._v(" 如何更新样式")]),s._v(" "),a("p",[s._v("可以通过JS/CSS更新样式，但我们一般用JS来更新浏览器样式")]),s._v(" "),a("ul",[a("li",[s._v('比如div.style.background=" "（不会用到，推荐第三种）')]),s._v(" "),a("li",[s._v('比如div.style.display=" "（不会用到，推荐第三种）')]),s._v(" "),a("li",[a("strong",[s._v("比如div.classList.add(' ') —— 为DIV添加class，class中包含执行的属性")])]),s._v(" "),a("li",[a("strong",[s._v("比如div.remove( ) —— 移除所有节点")])])]),s._v(" "),a("h3",{attrs:{id:"js-css更新样式经过的步骤有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-css更新样式经过的步骤有哪些"}},[s._v("#")]),s._v(" JS/CSS更新样式经过的步骤有哪些")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("第一种，全走")])])]),s._v(" "),a("p",[s._v("比如 div.remove( ) —— 触发移除当前所有的节点，其他元素relayout（重新布局）")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("第二种，跳过Layout")])])]),s._v(" "),a("p",[s._v("比如改变背景颜色，直接repaint（重新绘制）+composite（合成）")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("第三种，跳过Layout和Paint")])])]),s._v(" "),a("p",[s._v("比如改变transform(变换)，只需composite（合成）")]),s._v(" "),a("p",[s._v("CSS渲染过程依次包含布局、绘制和合成，其中布局和绘制可以被省略掉")])])}),[],!1,null,null,null);t.default=n.exports}}]);